{"version":3,"sources":["pages/overview.md","pages/input/create-input.md","pages/input/create-layout.md","pages/input/create-multi.md","pages/general/field.md","pages/ui-libraries/input-mui.md","pages/ui-libraries/input-basic.md","pages/ui-libraries/input-picker.md","pages/input/overview.md","pages/ui-libraries/overview.md","pages/ui-libraries/general.md","pages/general/validate.md","examples/0000_overview.tsx","examples/0010_field.tsx","examples/0020_create-input.tsx","examples/0030_create-input-select.tsx","examples/0040_create-layout.tsx","examples/0050_create-multi.tsx","examples/0060_text-input.tsx","examples/0070_select-input.tsx","examples/0080_library-general.tsx","examples/0090_library-replaced.tsx","examples/0100_library-logging.tsx","examples/0110_basic-text.tsx","examples/0120_basic-textarea.tsx","examples/0130_basic-select.tsx","examples/0140_basic-slider.tsx","examples/0150_basic-checkbox.tsx","examples/0160_basic-radio.tsx","examples/0170_basic-group-layout.tsx","examples/0180_basic-simple-form-layout.tsx","examples/0190_basic-multi.tsx","examples/0200_mui-radio.tsx","examples/0210_mui-checkbox.tsx","examples/0220_mui-switch.tsx","examples/0230_mui-slider.tsx","examples/0240_mui-group-layout.tsx","examples/0250_mui-simple-form-layout.tsx","examples/0260_mui-multi.tsx","examples/0270_mui-date-picker.tsx","examples/0280_mui-time-picker.tsx","examples/index.ts","CodeBlock/CodeBlock.tsx","routes.ts","App.tsx","serviceWorker.ts","theme.ts","index.tsx","CodeBlock/CodeBlock.module.css"],"names":["module","exports","Example","Text","name","validate","validateName","FirstNameDisplay","FirstName","full","Form","useState","_field","field","init","getState","actions","state","_setFormState","setValue","setTouched","setFormState","reset","setState","value","errors","touched","pristine","style","padding","htmlFor","onChange","e","target","onBlur","_","length","color","map","err","toString","renderErrors","text","createInput","helpers","id","label","handleChange","handleBlur","aria-label","className","renderOption","key","select","props","Object","entries","options","green","blue","FavoriteColor","FavoriteColorDisplay","red","SimpleFormLayout","createLayout","items","title","Input","i","Cmpt","TextArea","Select","Error","FormDisplay","Multi","createMulti","display","onClick","splice","newPerson","GroupLayout","MultiForm","People","PeopleDisplay","type","push","TextInputExample","TextInput","SelectInputExample","SelectInput","Blue","Red","Display","console","log","logFirstName","variant","DescribeYourself","DescribeYourselfDisplay","Slider","Angle","AngleDisplay","min","max","step","Checkbox","Cool","CoolDisplay","Radio","FavoriteFlavorOfIceCream","FavoriteFlavorOfIceCreamDisplay","reduce","acc","item","Number","BandsILike","BandsILikeDisplay","bands","MyForm","MyFormDisplay","onSubmit","preventDefault","window","alert","RadioInput","FavoriteFlavor","FavoriteFlavorDisplay","Chocolate","Vanilla","CheckboxInput","SwitchInput","Light","LightDisplay","background","borderRadius","SliderInput","marks","Array","num","Temperature","TemperatureDisplay","orientation","TemperatureVertical","TemperatureVerticalDisplay","Pink","Purple","Friends","FriendsDisplay","DatePickerInput","Date","AppointmentDate","AppointmentDateDisplay","TimePickerInput","AppointmentTime","AppointmentTimeDisplay","examples","cmpt","require","content","HL","language","children","codeEl","useRef","useEffect","Prism","highlightElement","current","ref","CodeBlock","startsWith","substr","default","styles","resultHeading","result","routes","link","overview","uiOverviewPage","code","uiGeneralPage","inputBasicPage","inputMuiPage","inputPickerPage","inputOverviewPage","createInputPage","createLayoutPage","createMultiPage","fieldPage","validatePage","routeLinks","cur","forEach","route","JSON","stringify","getMDText","fn","cache","args","memoize","file","fetch","then","res","scrollToId","el","document","querySelector","history","pushState","location","hash","scrollTo","getBoundingClientRect","top","flatten","child","React","Children","toArray","useStyles","makeStyles","theme","createStyles","white","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","flexGrow","paddingBottom","contentShift","chevron","chevronBackground","backgroundColor","navLinks","flexFlow","fontSize","navRight","flex","textAlign","paddingRight","navLeft","paddingLeft","largeFont","navSeparator","menuCurrent","lsMenuOpen","localStorage","parse","renderMenuLink","useLocation","classes","to","ListItem","button","pathname","ListItemText","primary","renderSection","Typography","noWrap","Divider","pageToNextMap","pageToPrevMap","concat","arr","getCmpt","url","createElement","setCmpt","a","async","source","renderers","href","heading","slug","toLowerCase","replace","level","IconButton","renderSectionRoutes","renderRoute","exact","path","App","menuOpen","setMenuOpen","toggleMenuOpen","scrollPositionName","listener","bodyOffset","body","y","addEventListener","savedPosition","curInc","scroll","html","documentElement","Math","scrollHeight","offsetHeight","clientHeight","getBodyHeight","setTimeout","removeEventListener","AppBar","position","clsx","Toolbar","edge","Drawer","anchor","open","onClose","paper","List","Boolean","hostname","match","createMuiTheme","palette","main","light","dark","secondary","error","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45fcf0e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/overview.3365fe07.md\";","module.exports = __webpack_public_path__ + \"static/media/create-input.72546c4e.md\";","module.exports = __webpack_public_path__ + \"static/media/create-layout.c78cd0f5.md\";","module.exports = __webpack_public_path__ + \"static/media/create-multi.59f079e8.md\";","module.exports = __webpack_public_path__ + \"static/media/field.81a0cc8f.md\";","module.exports = __webpack_public_path__ + \"static/media/input-mui.3ca42cdb.md\";","module.exports = __webpack_public_path__ + \"static/media/input-basic.49eec789.md\";","module.exports = __webpack_public_path__ + \"static/media/input-picker.f6ce93fc.md\";","module.exports = __webpack_public_path__ + \"static/media/overview.405c88bb.md\";","module.exports = __webpack_public_path__ + \"static/media/overview.1714da77.md\";","module.exports = __webpack_public_path__ + \"static/media/general.1998b110.md\";","module.exports = __webpack_public_path__ + \"static/media/validate.e4156db9.md\";","import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {FirstNameDisplay, FirstName} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <FirstName /> {/* form input */}\n      <FirstNameDisplay full={true} />\n    </>\n  )\n}\n\nexport default Example","import React, { useState } from 'react'\nimport { field } from '@zecos/field'\nimport { validateName } from \"@zecos/validate\"\n\nconst renderErrors = state => {\n  const {touched, errors} = state\n  if (touched && errors.length) {\n    return (\n      <span style={{color: \"red\"}}>\n        {errors.map(err => <div>{err.toString()}</div>)}\n      </span>\n    )\n  }\n}\n\nconst Form = () => {\n  const [[actions, state], _setFormState] = useState(() => {\n    const _field = field({\n      init: '',\n      validate: validateName,\n    })\n    return [_field, _field.getState()]\n  })\n  \n  const {\n    setValue,\n    setTouched,\n    reset,\n    setState,\n    getState\n  } = actions\n  \n  const setFormState = state => _setFormState([actions, state])\n  \n  const {\n    errors,\n    value,\n    touched,\n    pristine\n  } = actions.getState()\n  \n  return (\n    <form style={{padding: 20}}>\n      <label htmlFor=\"name\">Name: </label>&nbsp;\n      <input\n        name=\"name\"\n        value={value}\n        onChange={e => setFormState(setValue(e.target.value))}\n        onBlur={_ => setFormState(setTouched())}\n      />\n      <br />\n      {renderErrors(state)}\n    </form>\n  )\n}\n\nexport default Form\n","import React from \"react\"\nimport { createInput } from '@zecos/input'\nimport { validateName } from \"@zecos/validate\"\n\nconst text = createInput(({helpers, state}) => {\n    const {\n      id,\n      name,\n      label,\n      handleChange,\n      handleBlur,\n    } = helpers\n    \n    const {touched, errors, value} = state\n    return (\n      <div>\n        <label htmlFor={name}>\n          {label}: &nbsp;\n        {touched && errors[0] && errors[0].toString()}\n        </label>\n        <input\n          name={name}\n          aria-label={label}\n          onChange={handleChange}\n          value={value}\n          onBlur={handleBlur}\n          id={id}\n        />\n      </div> \n    )\n})\n\nconst Form = () => {\n  const {FirstName, FirstNameDisplay} = text({\n    name: \"firstName\",\n    validate: validateName,\n    init: \"Bob\",\n  })\n\n  return (\n    <form className=\"form\">\n      <FirstName /><br />\n      <FirstNameDisplay full={true} />\n    </form> \n  )\n}\n\nexport default Form","import React from 'react'\nimport { createInput } from '@zecos/input'\n\nconst renderOption = ([key, label]) => {\n  return (\n    <option key={key} value={key}>\n      {label}\n    </option>\n  )\n}\n\nexport const select = createInput(({helpers, props}) => {\n  const {\n    id,\n    name,\n    value,\n    handleChange,\n    handleBlur,\n    label,\n    htmlFor,\n  } = helpers\n\n  return (\n    <div>\n      <label htmlFor={htmlFor}>\n        {label}: &nbsp;\n      </label>\n      <select\n        onChange={handleChange}\n        onBlur={handleBlur}\n        name={name}\n        id={id}\n        value={value}\n        aria-label={label}\n      >\n        {Object.entries(props.options).map(renderOption)}\n      </select>\n    </div>\n  )\n})\n\nexport const Form = () => {\n  const {FavoriteColor, FavoriteColorDisplay} = select({\n    init: \"blue\",\n    name: \"favoriteColor\",\n    props: {\n     options: {green: \"Green\", blue: \"Blue\"} \n    }\n  })\n\n  return (\n    <form className=\"form\">\n      <FavoriteColor options={{blue: \"Blue\", red: \"Red\"}} />\n      <FavoriteColorDisplay />\n    </form>\n  )\n}\n\nexport default Form","import React from 'react'\nimport { createLayout } from \"@zecos/input\"\nimport { Text, Select, TextArea } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst SimpleFormLayout = createLayout(({props, items, errors, helpers}) => {\n  return (\n    <form {...props}>\n      <div>{helpers.title}</div>\n      {errors[0] && errors[0].toString()}\n      {items.map((Input, i) => (\n        <span key={i}><Input.Cmpt key={i} /></span>\n      ))}\n    </form>\n  )\n})\n\nconst Example = () => {\n  const { Form, FormDisplay } = SimpleFormLayout({\n    name: 'form',\n    items: [\n      Text({\n        validate: validateName,\n        name: \"firstName\",\n        init: \"Zane\",\n      }),\n      TextArea({\n        name: \"describeYourself\"\n      }),\n      Select({\n        init: \"blue\",\n        name: \"favoriteColor\",\n        props: {\n          options: {\n            \"Blue\": \"blue\",\n            \"Red\": \"red\",\n          }\n        }\n      })\n    ],\n    validate: (items:any) => {\n      if (items[0].state.value === \"Zane\") {\n        return [new Error(\"Name cannot be Zane\")]\n      }\n      return []\n    }\n  })\n  \n  return (\n    <div>\n      <Form />\n      <FormDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { createMulti } from '@zecos/input'\nimport { Text, GroupLayout } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst Multi:any = createMulti(({items, actions, helpers}) => {\n  return <>\n    {items.map((Input, i) => (\n      <div key={i}>\n      <Input.Cmpt />\n      <button\n        style={{display: \"block\"}}\n        onClick={() => actions.splice(i, 1)}\n      >\n        Remove Person\n      </button>\n      </div>\n    ))}\n  </>\n})\n\nconst newPerson = () => GroupLayout({\n  name: 'person',\n  items: [\n    Text({\n      validate: validateName,\n      name: \"firstName\"\n    }),\n    Text({\n      validate: validateName,\n      name: \"lastName\",\n    }),\n  ],\n})\n\nconst MultiForm = () => {\n  const {actions, People, PeopleDisplay} = Multi({\n    init: [\n      newPerson()\n    ],\n    name: \"people\",\n  })\n  \n  return <div>\n      <People />\n      <PeopleDisplay />\n      <button\n        type=\"button\"\n        onClick={() => actions.push(newPerson)}\n      >\n        Add Person\n      </button>\n    </div>\n}\n\n\nexport default MultiForm\n","import React from \"react\"\nimport { validateName } from \"@zecos/validate\"\nimport { TextInput} from \"@zecos/input-mui\"\n\nconst TextInputExample = () => {\n  const {FirstName, FirstNameDisplay} = TextInput({\n    validate: validateName,\n    init: '',\n    name: \"firstName\"\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FirstName />\n      <FirstNameDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default TextInputExample","import React from \"react\"\nimport { SelectInput } from \"@zecos/input-mui\"\n\nconst SelectInputExample = () => {\n  const {FavoriteColor, FavoriteColorDisplay} = SelectInput({\n    init: \"blue\",\n    name: \"favoriteColor\",\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FavoriteColor options={{\n        Blue: \"blue\",\n        Red: \"red\",\n      }}/>\n      <FavoriteColorDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default SelectInputExample\n","import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {FirstNameDisplay, Cmpt} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <Cmpt /> {/* form input */}\n      <FirstNameDisplay full={true} />\n    </>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\n\nconst Example = () => {\n  const {Display, FirstName, Cmpt, FirstNameDisplay} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  console.log(\"display\", Display)\n  \n  return (\n    <>\n      <FirstName />\n      <Cmpt />  {/* same as above line */}\n      <Display full={true} />\n      <FirstNameDisplay full={true} /> {/* same as above line */}\n      <FirstNameDisplay /> {/* Without the \"full\" property, it just gets the value */}\n    </>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Text } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\nimport { Button } from '@material-ui/core'\n\n\nconst Example = () => {\n  const {FirstName, Display, log, logFirstName} = Text({\n    name: \"firstName\",\n    validate: validateName\n  })\n  \n  return (\n    <>\n      <FirstName />\n      <Display />\n      <br />\n      <Button variant=\"contained\" onClick={log}>Log First Name Data</Button>\n      <br />\n      <br />\n      <div>These two buttons are equivalent. Check the console.</div>\n      <br />\n      <Button variant=\"contained\" onClick={logFirstName}>Log First Name Data</Button>\n    </>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { validateName } from '@zecos/validate'\nimport { Text } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { FirstName, FirstNameDisplay } = Text({\n    validate: validateName,\n    init: 'Harry',\n    name: \"firstName\"\n  })\n\n  return (\n    <div>\n      <FirstName />\n      <FirstNameDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { validateName } from '@zecos/validate'\nimport { TextArea } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { DescribeYourself, DescribeYourselfDisplay } = TextArea({\n    validate: validateName,\n    init: 'I am a pretty cool dude...',\n    name: \"describeYourself\"\n  })\n\n  return (\n    <div>\n      <DescribeYourself />\n      <DescribeYourselfDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { validateName } from '@zecos/validate'\nimport { Select } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { FavoriteColor, FavoriteColorDisplay } = Select({\n    init: 'blue',\n    name: \"favoriteColor\"\n  })\n\n  return (\n    <div>\n      <FavoriteColor\n        options={{\n          \"Red\": \"red\",\n          \"Blue\": \"blue\",\n          \"Purple\": \"purple\",\n          \"Black\": \"black\",\n        }}\n      />\n      <FavoriteColorDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Slider } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { Angle, AngleDisplay } = Slider({\n    init: 0,\n    name: \"angle\"\n  })\n\n  return (\n    <div>\n      <Angle\n        min=\"0\"\n        max=\"90\"\n        step=\"0.5\"\n      />\n      <AngleDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Checkbox } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { Cool, CoolDisplay } = Checkbox({\n    init: true,\n    name: \"cool\",\n    label: \"I am cool\",\n  })\n\n  return (\n    <div>\n      <Cool />\n      <CoolDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Radio } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { FavoriteFlavorOfIceCream, FavoriteFlavorOfIceCreamDisplay } = Radio({\n    init: 'chocolate',\n    name: \"favoriteFlavorOfIceCream\"\n  })\n\n  return (\n    <div>\n      <FavoriteFlavorOfIceCream\n        options={{\n          \"Rocky Road\": \"rockyroad\",\n          \"Chocolate\": \"chocolate\",\n          \"Vanilla\": \"vanilla\",\n        }}\n      />\n      <FavoriteFlavorOfIceCreamDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Checkbox, GroupLayout } from '@zecos/input-basic'\n\nconst Example = () => {\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\n    name: \"bandsILike\",\n    items: [\n      Checkbox({\n        name: \"blink182\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"sum41\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"redHotChiliPeppers\",\n        init: false,\n      }),\n    ],\n    validate: (items) => {\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\n      if (totalLiked > 2) {\n        return [new Error(\"Pick no more than 2.\")]\n      }\n      return []\n    }\n  })\n  \n  return (\n    <div>\n      <BandsILike />\n      <br />\n      <BandsILikeDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Checkbox, SimpleFormLayout, GroupLayout, Text, TextArea,\n  Select, Slider, Radio } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst Example = () => {\n  const bands = GroupLayout({\n    name: \"bandsILike\",\n    items: [\n      Checkbox({\n        name: \"blink182\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"sum41\",\n        init: false,\n      }),\n      Checkbox({\n        name: \"redHotChiliPeppers\",\n        init: false,\n      }),\n    ],\n    validate: (items) => {\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\n      if (totalLiked > 2) {\n        return [new Error(\"Pick no more than 2.\")]\n      }\n      return []\n    }\n  })\n  \n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\n    name: \"myForm\",\n    items: [\n      Text({\n        name: \"firstName\",\n        init: \"Fred\",\n      }),\n      TextArea({\n        validate: validateName,\n        init: 'I am a pretty cool dude...',\n        name: \"describeYourself\"\n      }),\n      Select({\n        init: 'blue',\n        name: \"favoriteColor\",\n        props: {\n          options: {\n            \"Red\": \"red\",\n            \"Blue\": \"blue\",\n            \"Purple\": \"purple\",\n            \"Black\": \"black\",\n          }\n        }\n      }),\n      Slider({\n        init: 0,\n        name: \"angle\"\n      }),\n      Checkbox({\n        init: false,\n        name: \"pottyTrained\"\n      },\n      Radio({\n        init: 'chocolate',\n        name: \"favoriteFlavorOfIceCream\",\n        props: {\n          options: {\n            \"Rocky Road\": \"rockyroad\",\n            \"Chocolate\": \"chocolate\",\n            \"Vanilla\": \"vanilla\",\n          }\n        }\n      })),\n      bands,\n    ]\n  })\n  \n  return (\n    <div>\n      <MyForm\n        onSubmit={e => {\n          e.preventDefault()\n          window.alert(\"submitted!\")\n        }}\n      />\n      <br />\n      <MyFormDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { Text, GroupLayout, Multi } from '@zecos/input-basic'\nimport { validateName } from '@zecos/validate'\n\nconst newPerson = () => GroupLayout({\n  name: 'person',\n  items: [\n    Text({\n      validate: validateName,\n      name: \"firstName\"\n    }),\n    Text({\n      validate: validateName,\n      name: \"lastName\",\n    }),\n  ],\n})\n\nconst MultiForm = () => {\n  const {actions, People, PeopleDisplay} = Multi({\n    init: [\n      newPerson()\n    ],\n    name: \"people\",\n  })\n  \n  return <div>\n      <People />\n      <PeopleDisplay />\n      <button type=\"button\" onClick={() => actions.push(newPerson)}>Add Person</button>\n    </div>\n}\n\n\nexport default MultiForm\n","import React from \"react\"\nimport { RadioInput} from \"@zecos/input-mui\"\n\nconst Example = () => {\n  const {FavoriteFlavor, FavoriteFlavorDisplay} = RadioInput({\n    init: \"rockyroad\",\n    name: \"favoriteFlavor\",\n    label: \"Favorite Flavor of Ice Cream\",\n  })\n\n  return (\n    <>\n    <form className=\"form\">\n      <FavoriteFlavor\n        options={{\n          \"Rocky Road\": \"rockyroad\",\n          Chocolate: \"chocolate\",\n          Vanilla: \"vanilla\",\n        }}\n      />\n      <FavoriteFlavorDisplay />\n    </form>\n    <br />\n    {/* display the data */}\n    </>\n  )\n}\n \nexport default Example","import React from 'react'\nimport { CheckboxInput } from '@zecos/input-mui'\n\nconst Example = () => {\n  const { Cool, CoolDisplay } = CheckboxInput({\n    init: true,\n    name: \"cool\",\n    label: \"I am cool\",\n  })\n\n  return (\n    <div>\n      <Cool />\n      <CoolDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { SwitchInput } from '@zecos/input-mui'\n\nconst Example = () => {\n  const {Light, LightDisplay, state } = SwitchInput({\n    init: false,\n    name: \"light\",\n  })\n  \n  const style = {\n    background: state.value ? \"yellow\" : \"black\",\n    color: state.value ? \"black\" : \"white\",\n    padding: 15,\n    borderRadius: 4,\n  }\n\n  return (\n    <div style={style}>\n      <Light />\n      <LightDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { SliderInput } from '@zecos/input-mui'\n\nconst Example = () => {\n  const {Temperature, TemperatureDisplay} = SliderInput({\n    init: 30,\n    name: 'temperature',\n    props: {\n      min: 0,\n      max: 100,\n      step: 10,\n      marks: [...new Array(11)]\n        .map((_, num) => ({\n          label: `${num * 10}°C`,\n          value: num * 10\n        })),\n    }\n  })\n  \n  const {TemperatureVertical, TemperatureVerticalDisplay} = SliderInput({\n    init: 30,\n    name: 'temperatureVertical',\n    props: {\n      min: 0,\n      max: 100,\n      step: 10,\n      orientation: \"vertical\",\n      marks: [...new Array(11)]\n        .map((_, num) => ({\n          label: `${num * 10}°C`,\n          value: num * 10\n        })),\n    }\n  })\n\n  return (\n    <div>\n      <Temperature />\n      <br />\n      <TemperatureVertical />\n      <TemperatureDisplay />\n      <TemperatureVerticalDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { CheckboxInput, GroupLayout } from '@zecos/input-mui'\n\nconst Example = () => {\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\n    name: \"bandsILike\",\n    items: [\n      CheckboxInput({\n        init: false,\n        name: \"systemOfADown\",\n      }),\n      CheckboxInput({\n        init: false,\n        name: \"blink182\",\n      }),\n      CheckboxInput({\n        init: false,\n        name: \"sum41\"\n      }),\n    ],\n    validate: (items) => {\n      const totalLiked = items.reduce((acc, item) => (\n        acc + Number(item.state.value)\n      ), 0)\n      if (totalLiked > 2) {\n        return [new Error(\"Pick no more than 2.\")]\n      }\n      return []\n    }\n  })\n\n  return (\n    <div>\n      <BandsILike />\n      <br />\n      <BandsILikeDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport {\n  TextInput,\n  SelectInput,\n  RadioInput,\n  CheckboxInput,\n  GroupLayout,\n  SimpleFormLayout,\n  SwitchInput,\n  SliderInput,\n} from '@zecos/input-mui'\nimport { validateName } from '@zecos/validate'\n\nconst Example = () => {\n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\n    name: \"myForm\",\n    items: [\n      TextInput({\n        validate: validateName,\n        init: '',\n        name: \"firstName\"\n      }),\n      TextInput({\n        validate: validateName,\n        init: '',\n        name: \"lastName\"\n      }),\n      SelectInput({\n        init: \"blue\",\n        name: \"favoriteColor\",\n        label: \"What is your favorite color?\",\n        props: {\n          options: {\n            Blue: \"blue\",\n            Red: \"red\",\n            Pink: \"pink\",\n            Purple: \"purple\",\n          }\n        }\n      }),\n      RadioInput({\n        init: \"rockyroad\",\n        name: \"favoriteFlavor\",\n        label: \"Favorite Flavor of Ice Cream\",\n        props: {\n          options: {\n            \"Rocky Road\": \"rockyroad\",\n            Chocolate: \"chocolate\",\n            Vanilla: \"vanilla\",\n          }\n        },\n      }),\n      CheckboxInput({\n        init: true,\n        name: \"cool\",\n        label: \"I am cool\",\n      }),\n      SwitchInput({\n        init: false,\n        name: \"light\",\n      }),\n      SliderInput({\n        init: 30,\n        name: 'temperatureVertical',\n        props: {\n          min: 0,\n          max: 100,\n          step: 10,\n          marks: [...new Array(11)]\n            .map((_, num) => ({\n              label: `${num * 10}°C`,\n              value: num * 10\n            })),\n        }\n      }),\n      GroupLayout({\n        name: \"bandsILike\",\n        items: [\n          CheckboxInput({\n            init: false,\n            name: \"systemOfADown\",\n          }),\n          CheckboxInput({\n            init: false,\n            name: \"blink182\",\n          }),\n          CheckboxInput({\n            init: false,\n            name: \"sum41\"\n          }),\n        ],\n        validate: (items) => {\n          const totalLiked = items.reduce((acc, item) => (\n            acc + Number(item.state.value)\n          ), 0)\n          if (totalLiked > 2) {\n            return [new Error(\"Pick no more than 2.\")]\n          }\n          return []\n        }\n      })\n    ],\n  })\n  \n  const handleSubmit = e => {\n    e.preventDefault()\n    window.alert(\"Submitted sucessfully!\")\n  }\n  \n  return (\n    <div>\n      <MyForm onSubmit={handleSubmit} />\n      <br />\n      <MyFormDisplay />\n    </div>\n  )\n}\n\nexport default Example","import React from 'react'\nimport { TextInput, GroupLayout, Multi } from '@zecos/input-mui'\nimport { Button } from \"@material-ui/core\"\nimport { validateName } from '@zecos/validate'\n\nconst newPerson = () => GroupLayout({\n  name: 'friend',\n  items: [\n    TextInput({\n      validate: validateName,\n      name: \"firstName\"\n    }),\n    TextInput({\n      validate: validateName,\n      name: \"lastName\",\n    }),\n  ],\n})\n\nconst MultiForm = () => {\n  const {actions, Friends, FriendsDisplay} = Multi({\n    init: [\n      newPerson()\n    ],\n    name: \"friends\",\n  })\n  \n  return <div>\n      <Friends />\n      <br />\n      <Button\n        type=\"button\"\n        variant=\"outlined\"\n        onClick={() => actions.push(newPerson)}\n      >\n        Add Person\n      </Button>\n      <br />\n      <br />\n      <FriendsDisplay />\n    </div>\n}\n\nexport default MultiForm","import React from 'react'\nimport { DatePickerInput } from '@zecos/input-picker'\n\nconst MultiForm = () => {\n  const {AppointmentDate, AppointmentDateDisplay} = DatePickerInput({\n    init: new Date,\n    name: 'appointmentDate'\n  })\n  \n  return <div>\n    <AppointmentDate />\n    <AppointmentDateDisplay />\n    </div>\n}\n\nexport default MultiForm","import React from 'react'\nimport { TimePickerInput } from '@zecos/input-picker'\n\nconst MultiForm = () => {\n  const {AppointmentTime, AppointmentTimeDisplay} = TimePickerInput({\n    init: new Date,\n    name: 'appointmentTime'\n  })\n  \n  return <div>\n    <AppointmentTime />\n    <AppointmentTimeDisplay />\n    </div>\n}\n\nexport default MultiForm","export const examples = {\n  \"0000_overview\": {\n    cmpt: require('./0000_overview'),\n    content: \"import React from 'react'\\nimport { Text } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\n\\n\\nconst Example = () => {\\n  const {FirstNameDisplay, FirstName} = Text({\\n    name: \\\"firstName\\\",\\n    validate: validateName\\n  })\\n  \\n  return (\\n    <>\\n      <FirstName /> {/* form input */}\\n      <FirstNameDisplay full={true} />\\n    </>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0010_field\": {\n    cmpt: require('./0010_field'),\n    content: \"import React, { useState } from 'react'\\nimport { field } from '@zecos/field'\\nimport { validateName } from \\\"@zecos/validate\\\"\\n\\nconst renderErrors = state => {\\n  const {touched, errors} = state\\n  if (touched && errors.length) {\\n    return (\\n      <span style={{color: \\\"red\\\"}}>\\n        {errors.map(err => <div>{err.toString()}</div>)}\\n      </span>\\n    )\\n  }\\n}\\n\\nconst Form = () => {\\n  const [[actions, state], _setFormState] = useState(() => {\\n    const _field = field({\\n      init: '',\\n      validate: validateName,\\n    })\\n    return [_field, _field.getState()]\\n  })\\n  \\n  const {\\n    setValue,\\n    setTouched,\\n    reset,\\n    setState,\\n    getState\\n  } = actions\\n  \\n  const setFormState = state => _setFormState([actions, state])\\n  \\n  const {\\n    errors,\\n    value,\\n    touched,\\n    pristine\\n  } = actions.getState()\\n  \\n  return (\\n    <form style={{padding: 20}}>\\n      <label htmlFor=\\\"name\\\">Name: </label>&nbsp;\\n      <input\\n        name=\\\"name\\\"\\n        value={value}\\n        onChange={e => setFormState(setValue(e.target.value))}\\n        onBlur={_ => setFormState(setTouched())}\\n      />\\n      <br />\\n      {renderErrors(state)}\\n    </form>\\n  )\\n}\\n\\nexport default Form\\n\"\n  },\"0020_create-input\": {\n    cmpt: require('./0020_create-input'),\n    content: \"import React from \\\"react\\\"\\nimport { createInput } from '@zecos/input'\\nimport { validateName } from \\\"@zecos/validate\\\"\\n\\nconst text = createInput(({helpers, state}) => {\\n    const {\\n      id,\\n      name,\\n      label,\\n      handleChange,\\n      handleBlur,\\n    } = helpers\\n    \\n    const {touched, errors, value} = state\\n    return (\\n      <div>\\n        <label htmlFor={name}>\\n          {label}: &nbsp;\\n        {touched && errors[0] && errors[0].toString()}\\n        </label>\\n        <input\\n          name={name}\\n          aria-label={label}\\n          onChange={handleChange}\\n          value={value}\\n          onBlur={handleBlur}\\n          id={id}\\n        />\\n      </div> \\n    )\\n})\\n\\nconst Form = () => {\\n  const {FirstName, FirstNameDisplay} = text({\\n    name: \\\"firstName\\\",\\n    validate: validateName,\\n    init: \\\"Bob\\\",\\n  })\\n\\n  return (\\n    <form className=\\\"form\\\">\\n      <FirstName /><br />\\n      <FirstNameDisplay full={true} />\\n    </form> \\n  )\\n}\\n\\nexport default Form\"\n  },\"0030_create-input-select\": {\n    cmpt: require('./0030_create-input-select'),\n    content: \"import React from 'react'\\nimport { createInput } from '@zecos/input'\\n\\nconst renderOption = ([key, label]) => {\\n  return (\\n    <option key={key} value={key}>\\n      {label}\\n    </option>\\n  )\\n}\\n\\nexport const select = createInput(({helpers, props}) => {\\n  const {\\n    id,\\n    name,\\n    value,\\n    handleChange,\\n    handleBlur,\\n    label,\\n    htmlFor,\\n  } = helpers\\n\\n  return (\\n    <div>\\n      <label htmlFor={htmlFor}>\\n        {label}: &nbsp;\\n      </label>\\n      <select\\n        onChange={handleChange}\\n        onBlur={handleBlur}\\n        name={name}\\n        id={id}\\n        value={value}\\n        aria-label={label}\\n      >\\n        {Object.entries(props.options).map(renderOption)}\\n      </select>\\n    </div>\\n  )\\n})\\n\\nexport const Form = () => {\\n  const {FavoriteColor, FavoriteColorDisplay} = select({\\n    init: \\\"blue\\\",\\n    name: \\\"favoriteColor\\\",\\n    props: {\\n     options: {green: \\\"Green\\\", blue: \\\"Blue\\\"} \\n    }\\n  })\\n\\n  return (\\n    <form className=\\\"form\\\">\\n      <FavoriteColor options={{blue: \\\"Blue\\\", red: \\\"Red\\\"}} />\\n      <FavoriteColorDisplay />\\n    </form>\\n  )\\n}\\n\\nexport default Form\"\n  },\"0040_create-layout\": {\n    cmpt: require('./0040_create-layout'),\n    content: \"import React from 'react'\\nimport { createLayout } from \\\"@zecos/input\\\"\\nimport { Text, Select, TextArea } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\n\\nconst SimpleFormLayout = createLayout(({props, items, errors, helpers}) => {\\n  return (\\n    <form {...props}>\\n      <div>{helpers.title}</div>\\n      {errors[0] && errors[0].toString()}\\n      {items.map((Input, i) => (\\n        <span key={i}><Input.Cmpt key={i} /></span>\\n      ))}\\n    </form>\\n  )\\n})\\n\\nconst Example = () => {\\n  const { Form, FormDisplay } = SimpleFormLayout({\\n    name: 'form',\\n    items: [\\n      Text({\\n        validate: validateName,\\n        name: \\\"firstName\\\",\\n        init: \\\"Zane\\\",\\n      }),\\n      TextArea({\\n        name: \\\"describeYourself\\\"\\n      }),\\n      Select({\\n        init: \\\"blue\\\",\\n        name: \\\"favoriteColor\\\",\\n        props: {\\n          options: {\\n            \\\"Blue\\\": \\\"blue\\\",\\n            \\\"Red\\\": \\\"red\\\",\\n          }\\n        }\\n      })\\n    ],\\n    validate: (items:any) => {\\n      if (items[0].state.value === \\\"Zane\\\") {\\n        return [new Error(\\\"Name cannot be Zane\\\")]\\n      }\\n      return []\\n    }\\n  })\\n  \\n  return (\\n    <div>\\n      <Form />\\n      <FormDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0050_create-multi\": {\n    cmpt: require('./0050_create-multi'),\n    content: \"import React from 'react'\\nimport { createMulti } from '@zecos/input'\\nimport { Text, GroupLayout } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\n\\nconst Multi:any = createMulti(({items, actions, helpers}) => {\\n  return <>\\n    {items.map((Input, i) => (\\n      <div key={i}>\\n      <Input.Cmpt />\\n      <button\\n        style={{display: \\\"block\\\"}}\\n        onClick={() => actions.splice(i, 1)}\\n      >\\n        Remove Person\\n      </button>\\n      </div>\\n    ))}\\n  </>\\n})\\n\\nconst newPerson = () => GroupLayout({\\n  name: 'person',\\n  items: [\\n    Text({\\n      validate: validateName,\\n      name: \\\"firstName\\\"\\n    }),\\n    Text({\\n      validate: validateName,\\n      name: \\\"lastName\\\",\\n    }),\\n  ],\\n})\\n\\nconst MultiForm = () => {\\n  const {actions, People, PeopleDisplay} = Multi({\\n    init: [\\n      newPerson()\\n    ],\\n    name: \\\"people\\\",\\n  })\\n  \\n  return <div>\\n      <People />\\n      <PeopleDisplay />\\n      <button\\n        type=\\\"button\\\"\\n        onClick={() => actions.push(newPerson)}\\n      >\\n        Add Person\\n      </button>\\n    </div>\\n}\\n\\n\\nexport default MultiForm\\n\"\n  },\"0060_text-input\": {\n    cmpt: require('./0060_text-input'),\n    content: \"import React from \\\"react\\\"\\nimport { validateName } from \\\"@zecos/validate\\\"\\nimport { TextInput} from \\\"@zecos/input-mui\\\"\\n\\nconst TextInputExample = () => {\\n  const {FirstName, FirstNameDisplay} = TextInput({\\n    validate: validateName,\\n    init: '',\\n    name: \\\"firstName\\\"\\n  })\\n\\n  return (\\n    <>\\n    <form className=\\\"form\\\">\\n      <FirstName />\\n      <FirstNameDisplay />\\n    </form>\\n    <br />\\n    {/* display the data */}\\n    </>\\n  )\\n}\\n \\nexport default TextInputExample\"\n  },\"0070_select-input\": {\n    cmpt: require('./0070_select-input'),\n    content: \"import React from \\\"react\\\"\\nimport { SelectInput } from \\\"@zecos/input-mui\\\"\\n\\nconst SelectInputExample = () => {\\n  const {FavoriteColor, FavoriteColorDisplay} = SelectInput({\\n    init: \\\"blue\\\",\\n    name: \\\"favoriteColor\\\",\\n  })\\n\\n  return (\\n    <>\\n    <form className=\\\"form\\\">\\n      <FavoriteColor options={{\\n        Blue: \\\"blue\\\",\\n        Red: \\\"red\\\",\\n      }}/>\\n      <FavoriteColorDisplay />\\n    </form>\\n    <br />\\n    {/* display the data */}\\n    </>\\n  )\\n}\\n \\nexport default SelectInputExample\\n\"\n  },\"0080_library-general\": {\n    cmpt: require('./0080_library-general'),\n    content: \"import React from 'react'\\nimport { Text } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\n\\n\\nconst Example = () => {\\n  const {FirstNameDisplay, Cmpt} = Text({\\n    name: \\\"firstName\\\",\\n    validate: validateName\\n  })\\n  \\n  return (\\n    <>\\n      <Cmpt /> {/* form input */}\\n      <FirstNameDisplay full={true} />\\n    </>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0090_library-replaced\": {\n    cmpt: require('./0090_library-replaced'),\n    content: \"import React from 'react'\\nimport { Text } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\n\\n\\nconst Example = () => {\\n  const {Display, FirstName, Cmpt, FirstNameDisplay} = Text({\\n    name: \\\"firstName\\\",\\n    validate: validateName\\n  })\\n  console.log(\\\"display\\\", Display)\\n  \\n  return (\\n    <>\\n      <FirstName />\\n      <Cmpt />  {/* same as above line */}\\n      <Display full={true} />\\n      <FirstNameDisplay full={true} /> {/* same as above line */}\\n      <FirstNameDisplay /> {/* Without the \\\"full\\\" property, it just gets the value */}\\n    </>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0100_library-logging\": {\n    cmpt: require('./0100_library-logging'),\n    content: \"import React from 'react'\\nimport { Text } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\nimport { Button } from '@material-ui/core'\\n\\n\\nconst Example = () => {\\n  const {FirstName, Display, log, logFirstName} = Text({\\n    name: \\\"firstName\\\",\\n    validate: validateName\\n  })\\n  \\n  return (\\n    <>\\n      <FirstName />\\n      <Display />\\n      <br />\\n      <Button variant=\\\"contained\\\" onClick={log}>Log First Name Data</Button>\\n      <br />\\n      <br />\\n      <div>These two buttons are equivalent. Check the console.</div>\\n      <br />\\n      <Button variant=\\\"contained\\\" onClick={logFirstName}>Log First Name Data</Button>\\n    </>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0110_basic-text\": {\n    cmpt: require('./0110_basic-text'),\n    content: \"import React from 'react'\\nimport { validateName } from '@zecos/validate'\\nimport { Text } from '@zecos/input-basic'\\n\\nconst Example = () => {\\n  const { FirstName, FirstNameDisplay } = Text({\\n    validate: validateName,\\n    init: 'Harry',\\n    name: \\\"firstName\\\"\\n  })\\n\\n  return (\\n    <div>\\n      <FirstName />\\n      <FirstNameDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0120_basic-textarea\": {\n    cmpt: require('./0120_basic-textarea'),\n    content: \"import React from 'react'\\nimport { validateName } from '@zecos/validate'\\nimport { TextArea } from '@zecos/input-basic'\\n\\nconst Example = () => {\\n  const { DescribeYourself, DescribeYourselfDisplay } = TextArea({\\n    validate: validateName,\\n    init: 'I am a pretty cool dude...',\\n    name: \\\"describeYourself\\\"\\n  })\\n\\n  return (\\n    <div>\\n      <DescribeYourself />\\n      <DescribeYourselfDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0130_basic-select\": {\n    cmpt: require('./0130_basic-select'),\n    content: \"import React from 'react'\\nimport { validateName } from '@zecos/validate'\\nimport { Select } from '@zecos/input-basic'\\n\\nconst Example = () => {\\n  const { FavoriteColor, FavoriteColorDisplay } = Select({\\n    init: 'blue',\\n    name: \\\"favoriteColor\\\"\\n  })\\n\\n  return (\\n    <div>\\n      <FavoriteColor\\n        options={{\\n          \\\"Red\\\": \\\"red\\\",\\n          \\\"Blue\\\": \\\"blue\\\",\\n          \\\"Purple\\\": \\\"purple\\\",\\n          \\\"Black\\\": \\\"black\\\",\\n        }}\\n      />\\n      <FavoriteColorDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0140_basic-slider\": {\n    cmpt: require('./0140_basic-slider'),\n    content: \"import React from 'react'\\nimport { Slider } from '@zecos/input-basic'\\n\\nconst Example = () => {\\n  const { Angle, AngleDisplay } = Slider({\\n    init: 0,\\n    name: \\\"angle\\\"\\n  })\\n\\n  return (\\n    <div>\\n      <Angle\\n        min=\\\"0\\\"\\n        max=\\\"90\\\"\\n        step=\\\"0.5\\\"\\n      />\\n      <AngleDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0150_basic-checkbox\": {\n    cmpt: require('./0150_basic-checkbox'),\n    content: \"import React from 'react'\\nimport { Checkbox } from '@zecos/input-basic'\\n\\nconst Example = () => {\\n  const { Cool, CoolDisplay } = Checkbox({\\n    init: true,\\n    name: \\\"cool\\\",\\n    label: \\\"I am cool\\\",\\n  })\\n\\n  return (\\n    <div>\\n      <Cool />\\n      <CoolDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0160_basic-radio\": {\n    cmpt: require('./0160_basic-radio'),\n    content: \"import React from 'react'\\nimport { Radio } from '@zecos/input-basic'\\n\\nconst Example = () => {\\n  const { FavoriteFlavorOfIceCream, FavoriteFlavorOfIceCreamDisplay } = Radio({\\n    init: 'chocolate',\\n    name: \\\"favoriteFlavorOfIceCream\\\"\\n  })\\n\\n  return (\\n    <div>\\n      <FavoriteFlavorOfIceCream\\n        options={{\\n          \\\"Rocky Road\\\": \\\"rockyroad\\\",\\n          \\\"Chocolate\\\": \\\"chocolate\\\",\\n          \\\"Vanilla\\\": \\\"vanilla\\\",\\n        }}\\n      />\\n      <FavoriteFlavorOfIceCreamDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0170_basic-group-layout\": {\n    cmpt: require('./0170_basic-group-layout'),\n    content: \"import React from 'react'\\nimport { Checkbox, GroupLayout } from '@zecos/input-basic'\\n\\nconst Example = () => {\\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\\n    name: \\\"bandsILike\\\",\\n    items: [\\n      Checkbox({\\n        name: \\\"blink182\\\",\\n        init: false,\\n      }),\\n      Checkbox({\\n        name: \\\"sum41\\\",\\n        init: false,\\n      }),\\n      Checkbox({\\n        name: \\\"redHotChiliPeppers\\\",\\n        init: false,\\n      }),\\n    ],\\n    validate: (items) => {\\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\\n      if (totalLiked > 2) {\\n        return [new Error(\\\"Pick no more than 2.\\\")]\\n      }\\n      return []\\n    }\\n  })\\n  \\n  return (\\n    <div>\\n      <BandsILike />\\n      <br />\\n      <BandsILikeDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0180_basic-simple-form-layout\": {\n    cmpt: require('./0180_basic-simple-form-layout'),\n    content: \"import React from 'react'\\nimport { Checkbox, SimpleFormLayout, GroupLayout, Text, TextArea,\\n  Select, Slider, Radio } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\n\\nconst Example = () => {\\n  const bands = GroupLayout({\\n    name: \\\"bandsILike\\\",\\n    items: [\\n      Checkbox({\\n        name: \\\"blink182\\\",\\n        init: false,\\n      }),\\n      Checkbox({\\n        name: \\\"sum41\\\",\\n        init: false,\\n      }),\\n      Checkbox({\\n        name: \\\"redHotChiliPeppers\\\",\\n        init: false,\\n      }),\\n    ],\\n    validate: (items) => {\\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\\n      if (totalLiked > 2) {\\n        return [new Error(\\\"Pick no more than 2.\\\")]\\n      }\\n      return []\\n    }\\n  })\\n  \\n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\\n    name: \\\"myForm\\\",\\n    items: [\\n      Text({\\n        name: \\\"firstName\\\",\\n        init: \\\"Fred\\\",\\n      }),\\n      TextArea({\\n        validate: validateName,\\n        init: 'I am a pretty cool dude...',\\n        name: \\\"describeYourself\\\"\\n      }),\\n      Select({\\n        init: 'blue',\\n        name: \\\"favoriteColor\\\",\\n        props: {\\n          options: {\\n            \\\"Red\\\": \\\"red\\\",\\n            \\\"Blue\\\": \\\"blue\\\",\\n            \\\"Purple\\\": \\\"purple\\\",\\n            \\\"Black\\\": \\\"black\\\",\\n          }\\n        }\\n      }),\\n      Slider({\\n        init: 0,\\n        name: \\\"angle\\\"\\n      }),\\n      Checkbox({\\n        init: false,\\n        name: \\\"pottyTrained\\\"\\n      },\\n      Radio({\\n        init: 'chocolate',\\n        name: \\\"favoriteFlavorOfIceCream\\\",\\n        props: {\\n          options: {\\n            \\\"Rocky Road\\\": \\\"rockyroad\\\",\\n            \\\"Chocolate\\\": \\\"chocolate\\\",\\n            \\\"Vanilla\\\": \\\"vanilla\\\",\\n          }\\n        }\\n      })),\\n      bands,\\n    ]\\n  })\\n  \\n  return (\\n    <div>\\n      <MyForm\\n        onSubmit={e => {\\n          e.preventDefault()\\n          window.alert(\\\"submitted!\\\")\\n        }}\\n      />\\n      <br />\\n      <MyFormDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0190_basic-multi\": {\n    cmpt: require('./0190_basic-multi'),\n    content: \"import React from 'react'\\nimport { Text, GroupLayout, Multi } from '@zecos/input-basic'\\nimport { validateName } from '@zecos/validate'\\n\\nconst newPerson = () => GroupLayout({\\n  name: 'person',\\n  items: [\\n    Text({\\n      validate: validateName,\\n      name: \\\"firstName\\\"\\n    }),\\n    Text({\\n      validate: validateName,\\n      name: \\\"lastName\\\",\\n    }),\\n  ],\\n})\\n\\nconst MultiForm = () => {\\n  const {actions, People, PeopleDisplay} = Multi({\\n    init: [\\n      newPerson()\\n    ],\\n    name: \\\"people\\\",\\n  })\\n  \\n  return <div>\\n      <People />\\n      <PeopleDisplay />\\n      <button type=\\\"button\\\" onClick={() => actions.push(newPerson)}>Add Person</button>\\n    </div>\\n}\\n\\n\\nexport default MultiForm\\n\"\n  },\"0200_mui-radio\": {\n    cmpt: require('./0200_mui-radio'),\n    content: \"import React from \\\"react\\\"\\nimport { RadioInput} from \\\"@zecos/input-mui\\\"\\n\\nconst Example = () => {\\n  const {FavoriteFlavor, FavoriteFlavorDisplay} = RadioInput({\\n    init: \\\"rockyroad\\\",\\n    name: \\\"favoriteFlavor\\\",\\n    label: \\\"Favorite Flavor of Ice Cream\\\",\\n  })\\n\\n  return (\\n    <>\\n    <form className=\\\"form\\\">\\n      <FavoriteFlavor\\n        options={{\\n          \\\"Rocky Road\\\": \\\"rockyroad\\\",\\n          Chocolate: \\\"chocolate\\\",\\n          Vanilla: \\\"vanilla\\\",\\n        }}\\n      />\\n      <FavoriteFlavorDisplay />\\n    </form>\\n    <br />\\n    {/* display the data */}\\n    </>\\n  )\\n}\\n \\nexport default Example\"\n  },\"0210_mui-checkbox\": {\n    cmpt: require('./0210_mui-checkbox'),\n    content: \"import React from 'react'\\nimport { CheckboxInput } from '@zecos/input-mui'\\n\\nconst Example = () => {\\n  const { Cool, CoolDisplay } = CheckboxInput({\\n    init: true,\\n    name: \\\"cool\\\",\\n    label: \\\"I am cool\\\",\\n  })\\n\\n  return (\\n    <div>\\n      <Cool />\\n      <CoolDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0220_mui-switch\": {\n    cmpt: require('./0220_mui-switch'),\n    content: \"import React from 'react'\\nimport { SwitchInput } from '@zecos/input-mui'\\n\\nconst Example = () => {\\n  const {Light, LightDisplay, state } = SwitchInput({\\n    init: false,\\n    name: \\\"light\\\",\\n  })\\n  \\n  const style = {\\n    background: state.value ? \\\"yellow\\\" : \\\"black\\\",\\n    color: state.value ? \\\"black\\\" : \\\"white\\\",\\n    padding: 15,\\n    borderRadius: 4,\\n  }\\n\\n  return (\\n    <div style={style}>\\n      <Light />\\n      <LightDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0230_mui-slider\": {\n    cmpt: require('./0230_mui-slider'),\n    content: \"import React from 'react'\\nimport { SliderInput } from '@zecos/input-mui'\\n\\nconst Example = () => {\\n  const {Temperature, TemperatureDisplay} = SliderInput({\\n    init: 30,\\n    name: 'temperature',\\n    props: {\\n      min: 0,\\n      max: 100,\\n      step: 10,\\n      marks: [...new Array(11)]\\n        .map((_, num) => ({\\n          label: `${num * 10}°C`,\\n          value: num * 10\\n        })),\\n    }\\n  })\\n  \\n  const {TemperatureVertical, TemperatureVerticalDisplay} = SliderInput({\\n    init: 30,\\n    name: 'temperatureVertical',\\n    props: {\\n      min: 0,\\n      max: 100,\\n      step: 10,\\n      orientation: \\\"vertical\\\",\\n      marks: [...new Array(11)]\\n        .map((_, num) => ({\\n          label: `${num * 10}°C`,\\n          value: num * 10\\n        })),\\n    }\\n  })\\n\\n  return (\\n    <div>\\n      <Temperature />\\n      <br />\\n      <TemperatureVertical />\\n      <TemperatureDisplay />\\n      <TemperatureVerticalDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0240_mui-group-layout\": {\n    cmpt: require('./0240_mui-group-layout'),\n    content: \"import React from 'react'\\nimport { CheckboxInput, GroupLayout } from '@zecos/input-mui'\\n\\nconst Example = () => {\\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\\n    name: \\\"bandsILike\\\",\\n    items: [\\n      CheckboxInput({\\n        init: false,\\n        name: \\\"systemOfADown\\\",\\n      }),\\n      CheckboxInput({\\n        init: false,\\n        name: \\\"blink182\\\",\\n      }),\\n      CheckboxInput({\\n        init: false,\\n        name: \\\"sum41\\\"\\n      }),\\n    ],\\n    validate: (items) => {\\n      const totalLiked = items.reduce((acc, item) => (\\n        acc + Number(item.state.value)\\n      ), 0)\\n      if (totalLiked > 2) {\\n        return [new Error(\\\"Pick no more than 2.\\\")]\\n      }\\n      return []\\n    }\\n  })\\n\\n  return (\\n    <div>\\n      <BandsILike />\\n      <br />\\n      <BandsILikeDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0250_mui-simple-form-layout\": {\n    cmpt: require('./0250_mui-simple-form-layout'),\n    content: \"import React from 'react'\\nimport {\\n  TextInput,\\n  SelectInput,\\n  RadioInput,\\n  CheckboxInput,\\n  GroupLayout,\\n  SimpleFormLayout,\\n  SwitchInput,\\n  SliderInput,\\n} from '@zecos/input-mui'\\nimport { validateName } from '@zecos/validate'\\n\\nconst Example = () => {\\n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\\n    name: \\\"myForm\\\",\\n    items: [\\n      TextInput({\\n        validate: validateName,\\n        init: '',\\n        name: \\\"firstName\\\"\\n      }),\\n      TextInput({\\n        validate: validateName,\\n        init: '',\\n        name: \\\"lastName\\\"\\n      }),\\n      SelectInput({\\n        init: \\\"blue\\\",\\n        name: \\\"favoriteColor\\\",\\n        label: \\\"What is your favorite color?\\\",\\n        props: {\\n          options: {\\n            Blue: \\\"blue\\\",\\n            Red: \\\"red\\\",\\n            Pink: \\\"pink\\\",\\n            Purple: \\\"purple\\\",\\n          }\\n        }\\n      }),\\n      RadioInput({\\n        init: \\\"rockyroad\\\",\\n        name: \\\"favoriteFlavor\\\",\\n        label: \\\"Favorite Flavor of Ice Cream\\\",\\n        props: {\\n          options: {\\n            \\\"Rocky Road\\\": \\\"rockyroad\\\",\\n            Chocolate: \\\"chocolate\\\",\\n            Vanilla: \\\"vanilla\\\",\\n          }\\n        },\\n      }),\\n      CheckboxInput({\\n        init: true,\\n        name: \\\"cool\\\",\\n        label: \\\"I am cool\\\",\\n      }),\\n      SwitchInput({\\n        init: false,\\n        name: \\\"light\\\",\\n      }),\\n      SliderInput({\\n        init: 30,\\n        name: 'temperatureVertical',\\n        props: {\\n          min: 0,\\n          max: 100,\\n          step: 10,\\n          marks: [...new Array(11)]\\n            .map((_, num) => ({\\n              label: `${num * 10}°C`,\\n              value: num * 10\\n            })),\\n        }\\n      }),\\n      GroupLayout({\\n        name: \\\"bandsILike\\\",\\n        items: [\\n          CheckboxInput({\\n            init: false,\\n            name: \\\"systemOfADown\\\",\\n          }),\\n          CheckboxInput({\\n            init: false,\\n            name: \\\"blink182\\\",\\n          }),\\n          CheckboxInput({\\n            init: false,\\n            name: \\\"sum41\\\"\\n          }),\\n        ],\\n        validate: (items) => {\\n          const totalLiked = items.reduce((acc, item) => (\\n            acc + Number(item.state.value)\\n          ), 0)\\n          if (totalLiked > 2) {\\n            return [new Error(\\\"Pick no more than 2.\\\")]\\n          }\\n          return []\\n        }\\n      })\\n    ],\\n  })\\n  \\n  const handleSubmit = e => {\\n    e.preventDefault()\\n    window.alert(\\\"Submitted sucessfully!\\\")\\n  }\\n  \\n  return (\\n    <div>\\n      <MyForm onSubmit={handleSubmit} />\\n      <br />\\n      <MyFormDisplay />\\n    </div>\\n  )\\n}\\n\\nexport default Example\"\n  },\"0260_mui-multi\": {\n    cmpt: require('./0260_mui-multi'),\n    content: \"import React from 'react'\\nimport { TextInput, GroupLayout, Multi } from '@zecos/input-mui'\\nimport { Button } from \\\"@material-ui/core\\\"\\nimport { validateName } from '@zecos/validate'\\n\\nconst newPerson = () => GroupLayout({\\n  name: 'friend',\\n  items: [\\n    TextInput({\\n      validate: validateName,\\n      name: \\\"firstName\\\"\\n    }),\\n    TextInput({\\n      validate: validateName,\\n      name: \\\"lastName\\\",\\n    }),\\n  ],\\n})\\n\\nconst MultiForm = () => {\\n  const {actions, Friends, FriendsDisplay} = Multi({\\n    init: [\\n      newPerson()\\n    ],\\n    name: \\\"friends\\\",\\n  })\\n  \\n  return <div>\\n      <Friends />\\n      <br />\\n      <Button\\n        type=\\\"button\\\"\\n        variant=\\\"outlined\\\"\\n        onClick={() => actions.push(newPerson)}\\n      >\\n        Add Person\\n      </Button>\\n      <br />\\n      <br />\\n      <FriendsDisplay />\\n    </div>\\n}\\n\\nexport default MultiForm\"\n  },\"0270_mui-date-picker\": {\n    cmpt: require('./0270_mui-date-picker'),\n    content: \"import React from 'react'\\nimport { DatePickerInput } from '@zecos/input-picker'\\n\\nconst MultiForm = () => {\\n  const {AppointmentDate, AppointmentDateDisplay} = DatePickerInput({\\n    init: new Date,\\n    name: 'appointmentDate'\\n  })\\n  \\n  return <div>\\n    <AppointmentDate />\\n    <AppointmentDateDisplay />\\n    </div>\\n}\\n\\nexport default MultiForm\"\n  },\"0280_mui-time-picker\": {\n    cmpt: require('./0280_mui-time-picker'),\n    content: \"import React from 'react'\\nimport { TimePickerInput } from '@zecos/input-picker'\\n\\nconst MultiForm = () => {\\n  const {AppointmentTime, AppointmentTimeDisplay} = TimePickerInput({\\n    init: new Date,\\n    name: 'appointmentTime'\\n  })\\n  \\n  return <div>\\n    <AppointmentTime />\\n    <AppointmentTimeDisplay />\\n    </div>\\n}\\n\\nexport default MultiForm\"\n  }\n}","import React, { useEffect, useRef } from 'react'\nimport { examples } from '../examples/index'\nimport styles from './CodeBlock.module.css'\nimport './CodeBlock.css'\nimport 'prismjs'\n// import 'prismjs/themes/prism-tomorrow.css';\n// import 'prism-themes/themes/prism-darcula.css'\nimport './nord.css'\nimport './Fira/fira_code.css'\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-tsx';\nimport 'prismjs/components/prism-typescript';\n\ndeclare var Prism: any\n\nconst HL = ({language, children}) => {\n  const codeEl = useRef(null)\n  useEffect(() => {\n    if (codeEl) {\n      Prism.highlightElement(codeEl.current)\n    }\n  }, [codeEl, language, children])\n  return (\n    <div className=\"code-block\">\n      <pre ref={codeEl} className={`language-${language} example`}>\n        {children}\n      </pre>\n    </div>\n  )\n}\n\nconst startTag = \"example:\"\nexport const CodeBlock = ({language, value}) => {\n  if (value.startsWith(startTag)) {\n    const id = value.substr(startTag.length)\n    value = examples[id].content\n    const Cmpt = examples[id].cmpt.default\n    \n    return (\n      <>\n      <h3 className={styles.resultHeading}>Result</h3>\n      <div className={styles.result}>\n        <Cmpt />\n      </div>\n      <h3 className={styles.resultHeading}>Code</h3>\n      <HL language={language}>\n        {value}\n      </HL>\n      </>\n    )\n  }\n  return (\n    <HL language={language}>\n      {value}\n    </HL>\n  )\n}\n\n","import overview from \"./pages/overview.md\"\nimport createInputPage from \"./pages/input/create-input.md\"\nimport createLayoutPage from \"./pages/input/create-layout.md\"\nimport createMultiPage from \"./pages/input/create-multi.md\"\nimport fieldPage from './pages/general/field.md'\nimport inputMuiPage from './pages/ui-libraries/input-mui.md'\nimport inputBasicPage from './pages/ui-libraries/input-basic.md'\nimport inputPickerPage from './pages/ui-libraries/input-picker.md'\nimport inputOverviewPage from './pages/input/overview.md'\nimport uiOverviewPage from './pages/ui-libraries/overview.md'\nimport uiGeneralPage from './pages/ui-libraries/general.md'\nimport validatePage from './pages/general/validate.md'\n\nexport const routes = [{\n    name: \"\",\n    children: [{\n      title: \"Overview\",\n      link: \"/\",\n      cmpt: overview,\n    }]\n  }, {\n    name: \"UI Libraries\",\n    children: [{\n      title: \"Overview\",\n      link: \"/ui-libraries/overview\",\n      cmpt: uiOverviewPage,\n    }, {\n      title: \"General\",\n      code: false,\n      link: \"/ui-libraries/general\",\n      cmpt: uiGeneralPage,\n    }, {\n      title: \"@zecos/input-basic\",\n      link: \"/ui-libraries/input-basic\",\n      cmpt: inputBasicPage,\n    }, {\n      title: \"@zecos/input-mui\",\n      link: \"/ui-libraries/input-mui\",\n      cmpt: inputMuiPage,\n    }, {\n      title: \"@zecos/input-picker\",\n      link: \"/ui-libraries/input-picker\",\n      cmpt: inputPickerPage,\n    }]\n  }, {\n    name: \"@zecos/input\",\n    children: [{\n      title: \"Overview\",\n      code: false,\n      link: \"/input/overview\",\n      cmpt: inputOverviewPage,\n    }, {\n      title: \"createInput\",\n      code: false,\n      link: \"/input/create-input\",\n      cmpt: createInputPage,\n    }, {\n      title: \"createLayout\",\n      link: \"/input/create-layout\",\n      cmpt: createLayoutPage,\n      code: false,\n    }, {\n      title: \"createMulti\",\n      link: \"/input/create-multi\",\n      cmpt: createMultiPage,\n      code: false,\n    }],\n  }, {\n  name: \"General\",\n  children: [{\n    title: \"@zecos/field\",\n    link: \"/field\",\n    cmpt: fieldPage,\n  }, {\n    title: \"@zecos/validate\",\n    link: \"/validate\",\n    cmpt: validatePage,\n  }]\n}]\n\n\nexport const getRouteLinks = () => {\n  const result: string[] = []\n  routes.forEach(route => {\n    route.children.forEach(child => {\n      result.push(child.link)\n    })\n  })\n  return result\n}","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useEffect, useState, createContext, useContext } from 'react'\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles, Theme, createStyles, ThemeProvider } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ReactMarkdown from 'react-markdown'\nimport './App.css'\nimport {\n  Route,\n  Switch,\n  Link,\n  useLocation,\n} from \"react-router-dom\"\nimport clsx from 'clsx'\nimport { CodeBlock } from './CodeBlock/CodeBlock';\nimport { routes } from './routes';\n\n\n;(() => {\n  // show the route links for the react-snapshot\n  // should probably move md files to public.\n  const routeLinks = routes.reduce((acc, cur) => {\n    cur.children.forEach(route => {\n      acc.push(route.link)\n    })\n    return acc\n  }, ([] as string[]))\n  console.log(JSON.stringify(routeLinks, null, 2))\n})()\n\n\nconst memoize = fn => {\n  const cache = {}\n  return (...args) => {\n    const key = JSON.stringify(args)\n    if (cache[key]) {\n      return cache[key]\n    }\n    return cache[key] = fn(...args)\n  }\n}\n const getMDText = memoize((file) => {\n  return fetch(file).then(res => res.text()) \n})\n\nconst getBodyHeight = () => {\n  const body = document.body\n  const html = document.documentElement\n  \n  return Math.max( body.scrollHeight, body.offsetHeight, \n    html.clientHeight, html.scrollHeight, html.offsetHeight )\n}\n\ndeclare var history: any;\ndeclare var location: any;\n\nconst scrollToId = (id) => {\n  const el = document.querySelector(id)\n  if (el) {\n    if (history.pushState) {\n      history.pushState(null, null, id);\n    }\n    else {\n      location.hash = id;\n    }\n    window.scrollTo(0, el.getBoundingClientRect().top - 80)\n  }\n}\n\nfunction flatten(text, child) {\n  return typeof child === 'string'\n    ? text + child\n    : React.Children.toArray(child.props.children).reduce(flatten, text)\n}\n\nconst getMd = (file: string) => () => {\n  const [cmpt, setCmpt] = useState(<div>Loading...</div>)\n  useEffect(() => {\n    (async () => {\n      try {\n        const text = await getMDText(file)\n        setCmpt(<ReactMarkdown\n          source={text}\n          renderers={{\n            code: CodeBlock,\n            link: el => {\n              const {href} = el\n              const label = el.children[0].props.value\n              if (href.startsWith('/')) {\n                return <Link to={href}>{label}</Link>\n              } else if (href.startsWith('#')) {\n                return <a\n                  href={href}\n                  onClick={e => {\n                    e.preventDefault()\n                    scrollToId(href)\n                  }}\n                >\n                  {label}\n                </a>\n              }\n              return <a href={href}>{label}</a>\n            },\n            heading: (props) => {\n              const children = React.Children.toArray(props.children)\n              const text = children.reduce(flatten, '')\n              const slug = text.toLowerCase().replace(/\\W/g, '-')\n              return React.createElement('h' + props.level, {id: slug}, props.children)\n            }\n          }}\n        />)\n      } catch {\n        console.log(\"couldn't fetch file \" + file)\n      }\n    })()\n  }, [file])\n  return cmpt\n}\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    white: {\n      color: \"#D8DEE9\",\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      background: '#2E3440',\n      color: '#8FBCBB',\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: 0,\n      paddingBottom: theme.spacing(6),\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: drawerWidth,\n    },\n    chevron: {\n      color: \"#D8DEE9\"\n    },\n    chevronBackground: {\n      '&:hover': {\n        backgroundColor: '#3B4252',\n      }\n    },\n    navLinks: {\n      width: '100%',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      fontSize: \"60px\",\n    },\n    navRight: {\n      flex: '0 0 0',\n      textAlign: 'center',\n      width: 100,\n      paddingRight: 40,\n    },\n    navLeft: {\n      flex: '0 0 0',\n      textAlign: 'center',\n      width: 100,\n      paddingLeft: 40,\n    },\n    largeFont: {\n      fontSize: '40px',\n    },\n    navSeparator: {\n      flex: '1 0 0'\n    },\n    menuCurrent: {\n      background: '#3B4252',\n    }\n  }),\n)\nlet lsMenuOpen = true\nif (typeof localStorage !== \"undefined\"\n  && typeof localStorage[\"menu-open\"] !== \"undefined\") {\n    lsMenuOpen = JSON.parse(localStorage[\"menu-open\"])\n}\n\nconst renderMenuLink = ({title, link, code}) => {\n  const location = useLocation()\n  const classes = useStyles()\n  return (\n    <Link to={link} key={link}>\n      <ListItem button className={link ===  location.pathname ? classes.menuCurrent : \"\"} >\n      <ListItemText primary={code ? <code>{title}</code> : title} />\n      </ListItem>\n    </Link>\n  )\n}\n\nconst renderSection = ({name, children}, i) => (\n  <span key={name || i}>\n    <ListItem>\n      {name !== \"\" ? (\n        <Typography variant=\"h6\" noWrap>\n          {name}\n        </Typography>\n      ): \"\"}\n    </ListItem>\n    {children.map(renderMenuLink)}\n    <Divider />\n  </span>\n)\n\nconst pageToNextMap = ({} as any)\nconst pageToPrevMap = ({} as any)\nroutes\n  .reduce((acc, cur) => {\n    return acc.concat((cur as any).children.map(({link}) => link))\n  }, [])\n  .forEach((cur, i, arr) => {\n    if (arr.length - 1 !== i) {\n      pageToNextMap[cur] = arr[i + 1]\n    }\n    if (i !== 0) {\n      pageToPrevMap[cur] = arr[i - 1]\n    }\n  })\n  \n\nconst getCmpt = (url) => {\n  const classes:any = useStyles()\n  const { pathname } = useLocation()\n  return (\n    <>\n    {React.createElement(getMd(url))}\n    <div className={classes.navLinks}>\n    <div className={classes.navLeft}>\n      <Link to={pageToPrevMap[pathname]}>\n        <IconButton className={classes.largeFont}>\n          <ChevronLeftIcon fontSize=\"inherit\" className={classes.chevron} />\n        </IconButton>\n      </Link>\n    </div>\n    <div className={classes.navSeparator} />\n    <div className={classes.navRight}>\n      <Link to={pageToNextMap[pathname]}>\n        <IconButton className={classes.largeFont}>\n          <ChevronRightIcon fontSize=\"inherit\" className={classes.chevron} />\n        </IconButton>\n      </Link>\n    </div>\n    </div>\n    </>\n  )\n}\nconst renderSectionRoutes = ({children}) => children.map(renderRoute)\nconst renderRoute = ({cmpt, link}) => {\n  return <Route exact path={link}>\n    {getCmpt(cmpt)}\n  </Route>\n}\n\n\nconst App = () => {\n  const [menuOpen, setMenuOpen] = useState(lsMenuOpen)\n  const toggleMenuOpen = () => {\n    localStorage[\"menu-open\"] = !menuOpen\n    setMenuOpen(!menuOpen)\n  }\n  const scrollPositionName = `scrollposition.${location.href}`\n  \n  const classes = useStyles()\n  const listener = _ => {\n    const bodyOffset = document.body.getBoundingClientRect().y\n    if (typeof localStorage !== \"undefined\") {\n      localStorage[scrollPositionName] = -bodyOffset\n    }\n  }\n  \n  useEffect(() => {\n    window.addEventListener(\"scroll\", listener)\n    const savedPosition = localStorage[scrollPositionName]\n    const maxLook = 100\n    let curInc = 0\n    if (savedPosition) {\n      console.log('found saved position')\n      const scroll = () => {\n        if (curInc++ > maxLook) return\n        if (getBodyHeight() < savedPosition) {\n          setTimeout(scroll, 100)\n        } else {\n          window.scrollTo(0, savedPosition)\n        }\n      }\n      scroll()\n      setTimeout(() => {\n      }, 300)\n    } else {\n      if (window.location.hash) {\n        const scroll = () => {\n          if (curInc++ > maxLook) return\n          if (document.querySelector(window.location.hash)) {\n            scrollToId(window.location.hash)\n          } else {\n            console.log('waiting')\n            setTimeout(scroll, 100)\n          }\n        }\n        scroll()\n      }\n    }\n    return () => {\n      window.removeEventListener(\"scroll\", listener)\n    }\n  }, [location.pathname])\n  \n  \n  return (\n    <div>\n      <AppBar\n        position=\"fixed\"\n        color=\"secondary\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: menuOpen,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleMenuOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, menuOpen && classes.hide, classes.chevronBackground)}\n          >\n            <MenuIcon className={classes.chevron} />\n          </IconButton>\n          <Link to=\"/\">\n            <Typography variant=\"h6\" noWrap>\n              <span className={classes.white}>@zecos</span>\n            </Typography>\n          </Link>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={menuOpen}\n        onClose={toggleMenuOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={toggleMenuOpen} className={classes.chevronBackground}>\n            <ChevronLeftIcon className={classes.chevron} />\n          </IconButton>\n        </div>\n      <List>\n        {routes.map(renderSection)}\n      </List>\n      </Drawer>\n      <div className={classes.drawerHeader} />\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: menuOpen,\n        })}\n      >\n        <Switch>\n          {routes.map(renderSectionRoutes)}\n        </Switch>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  green,\n  blue,\n  pink,\n} from \"@material-ui/core/colors\"\nimport { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#ECEFF4',\n      light: '#2E3440',\n      dark: '#2E3440',\n      // contrastText: '',\n    },\n    secondary: {\n      main: '#2E3440',\n      light: '#E5E9F0',\n      dark: '#3B4252',\n      // contrastText: '',\n    },\n    error: {\n      main: '#BF616A',\n    },\n  },\n});","import React from 'react';\nimport {render} from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  Switch,\n  Route,\n  BrowserRouter,\n} from \"react-router-dom\"\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from './theme';\nimport { getRouteLinks } from './routes';\n\n\nrender((\n  <div>\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </div>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"CodeBlock_result__2AueK\",\"resultHeading\":\"CodeBlock_resultHeading__sUtaA\"};"],"sourceRoot":""}