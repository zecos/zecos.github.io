{"version":3,"sources":["pages/overview.md","pages/input/create-input.md","pages/input/create-layout.md","pages/input/create-multi.md","pages/general/field.md","pages/ui-libraries/input-mui.md","pages/ui-libraries/input-basic.md","pages/ui-libraries/input-picker.md","pages/input/overview.md","pages/ui-libraries/overview.md","pages/ui-libraries/general.md","pages/general/validate.md","pages/general/util.md","examples/0000_overview.tsx","examples/0010_field.tsx","examples/0020_create-input.tsx","examples/0030_create-input-select.tsx","examples/0040_create-layout.tsx","examples/0050_create-multi.tsx","examples/0060_text-input.tsx","examples/0070_select-input.tsx","examples/0080_library-general.tsx","examples/0090_library-replaced.tsx","examples/0100_library-logging.tsx","examples/0110_basic-text.tsx","examples/0120_basic-textarea.tsx","examples/0130_basic-select.tsx","examples/0140_basic-slider.tsx","examples/0150_basic-checkbox.tsx","examples/0160_basic-radio.tsx","examples/0165_basic-button.tsx","examples/0170_basic-group-layout.tsx","examples/0180_basic-simple-form.tsx","examples/0190_basic-multi.tsx","examples/0200_mui-radio.tsx","examples/0210_mui-checkbox.tsx","examples/0220_mui-switch.tsx","examples/0230_mui-slider.tsx","examples/0240_mui-group-layout.tsx","examples/0250_mui-simple-form-layout.tsx","examples/0260_mui-multi.tsx","examples/0270_mui-date-picker.tsx","examples/0280_mui-time-picker.tsx","examples/index.ts","CodeBlock/CodeBlock.tsx","routes.ts","App.tsx","useTracking.ts","serviceWorker.ts","theme.ts","index.tsx","../../src/index.tsx","examples/0290_get-values.tsx","../../node_modules/style-inject/dist/style-inject.es.js","../../src/input-creators/Text.tsx","../../src/input-creators/TextArea.tsx","../../src/input-creators/Select.tsx","../../src/input-creators/Slider.tsx","../../node_modules/tslib/tslib.es6.js","../../src/input-creators/Checkbox.tsx","../../src/input-creators/Radio.tsx","../../src/input-creators/GroupLayout.tsx","../../src/input-creators/Button.tsx","../../../util/dist/index.es.js","../../src/input-creators/SimpleForm.tsx","../../src/input-creators/Multi.tsx","CodeBlock/CodeBlock.module.css"],"names":["module","exports","Example","Text","name","validate","validateName","FirstNameDisplay","FirstName","full","Form","useState","_field","field","init","getState","actions","state","_setFormState","setValue","setTouched","setFormState","reset","setState","value","errors","touched","pristine","style","padding","htmlFor","onChange","e","target","onBlur","_","length","color","map","err","toString","renderErrors","text","createInput","helpers","id","label","handleChange","handleBlur","aria-label","className","renderOption","key","select","props","Object","entries","options","green","blue","FavoriteColor","FavoriteColorDisplay","red","SimpleFormLayout","createLayout","items","title","Input","i","Cmpt","TextArea","Select","Error","FormDisplay","Multi","createMulti","display","onClick","splice","newPerson","GroupLayout","MultiForm","People","PeopleDisplay","type","push","TextInputExample","TextInput","SelectInputExample","SelectInput","Blue","Red","Display","console","log","logFirstName","variant","DescribeYourself","DescribeYourselfDisplay","Slider","Angle","AngleDisplay","min","max","step","Checkbox","Cool","CoolDisplay","Radio","FavoriteFlavorOfIceCream","FavoriteFlavorOfIceCreamDisplay","Btn","preventDefault","window","alert","reduce","acc","item","Number","BandsILike","BandsILikeDisplay","SignInCmpt","SimpleForm","validateUsername","validatePassword","action","values","fetch","method","headers","body","JSON","stringify","then","handleErrors","location","href","catch","loadingText","SignIn","width","margin","RadioInput","FavoriteFlavor","FavoriteFlavorDisplay","Chocolate","Vanilla","CheckboxInput","SwitchInput","Light","LightDisplay","background","borderRadius","SliderInput","marks","Array","num","Temperature","TemperatureDisplay","orientation","TemperatureVertical","TemperatureVerticalDisplay","Pink","Purple","MyForm","MyFormDisplay","onSubmit","Friends","FriendsDisplay","DatePickerInput","Date","AppointmentDate","AppointmentDateDisplay","TimePickerInput","AppointmentTime","AppointmentTimeDisplay","examples","cmpt","require","content","HL","language","children","codeEl","useRef","useEffect","Prism","highlightElement","current","ref","CodeBlock","startsWith","substr","default","styles","resultHeading","result","routes","link","overview","uiOverviewPage","code","uiGeneralPage","inputBasicPage","inputMuiPage","inputPickerPage","inputOverviewPage","createInputPage","createLayoutPage","createMultiPage","utilPage","fieldPage","validatePage","cur","forEach","route","getMDText","fn","cache","args","memoize","file","res","scrollToId","el","document","querySelector","history","pushState","hash","scrollTo","getBoundingClientRect","top","flatten","child","React","Children","toArray","useStyles","makeStyles","theme","createStyles","white","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","flexGrow","paddingBottom","maxWidth","minWidth","innerWidth","boxSizing","contentShift","chevron","chevronBackground","backgroundColor","navLinks","flexFlow","fontSize","navRight","flex","textAlign","paddingRight","navLeft","paddingLeft","largeFont","navSeparator","menuCurrent","lsMenuOpen","sessionStorage","parse","renderMenuLink","useLocation","classes","to","ListItem","button","pathname","ListItemText","primary","renderSection","Typography","noWrap","Divider","pageToNextMap","pageToPrevMap","concat","arr","getCmpt","url","createElement","setCmpt","a","source","renderers","heading","slug","toLowerCase","replace","level","IconButton","renderSectionRoutes","renderRoute","exact","path","App","trackingId","process","GA_MEASUREMENT_ID","useHistory","listen","gtag","page_path","useTracking","menuOpen","setMenuOpen","toggleMenuOpen","handleKeyPress","active","activeElement","includes","tagName","metaKey","shiftKey","ctrlKey","addEventListener","removeEventListener","scrollPositionName","listener","bodyOffset","y","savedPosition","curInc","scroll","html","documentElement","Math","scrollHeight","offsetHeight","clientHeight","getBodyHeight","setTimeout","AppBar","position","clsx","Toolbar","edge","Drawer","anchor","open","onClose","paper","List","src","alt","height","Boolean","hostname","match","createMuiTheme","palette","main","light","dark","secondary","error","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","getValues","names","isArray","more","byNames","byName","arguments","getAllValues","getItemType","meta","$$__input_type","firstName","MiddleName","middleName","LastName","lastName","singleValue","multipleValues","alsoMultipleValues","allValues","neatify","obj","styleInject","css","insertAt","head","getElementsByTagName","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","renderError","passwordRegExp","test","React.createElement","groupStyles","textLabel","textInput","textAreaLabel","rows","textArea","sliderInput","assign","t","s","n","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","boolVal","checked","moreProps","val","_val","String","Items","input","Button","otherProps","_i","getErrors","items_1","items_2","items_3","_a","names_1","name_2","items_4","opts","toUpperCase","trim","upperCamel","charAt","slice","camelToUpperCamel","attemptedWithErrors","setAttemptedWithErrors","serverErrors","setServerErrors","resp","status","message","processError","Promise","reject","handleSubmit","itemErrors","name_1","hasItemErrors","actionCallbackArgs","setIsLoading","catchServerErrors","finally","undefined","isLoading","disabled","submitButtonText"],"mappings":"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","file":"static/js/main.4361fdc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/overview.6f1b0bf9.md\";","module.exports = __webpack_public_path__ + \"static/media/create-input.30145f14.md\";","module.exports = __webpack_public_path__ + \"static/media/create-layout.cd220676.md\";","module.exports = __webpack_public_path__ + \"static/media/create-multi.0d34823e.md\";","module.exports = __webpack_public_path__ + \"static/media/field.77bdb6ce.md\";","module.exports = __webpack_public_path__ + \"static/media/input-mui.b6cfb437.md\";","module.exports = __webpack_public_path__ + \"static/media/input-basic.52e33ef3.md\";","module.exports = __webpack_public_path__ + \"static/media/input-picker.a4eb76f6.md\";","module.exports = __webpack_public_path__ + \"static/media/overview.c25a5524.md\";","module.exports = __webpack_public_path__ + \"static/media/overview.6eebbf42.md\";","module.exports = __webpack_public_path__ + \"static/media/general.562834d5.md\";","module.exports = __webpack_public_path__ + \"static/media/validate.587fee17.md\";","module.exports = __webpack_public_path__ + \"static/media/util.e8a74a09.md\";","import React from 'react'\r\nimport { Text } from '@zecos/input-basic'\r\nimport { validateName } from '@zecos/validate'\r\n\r\n\r\nconst Example = () => {\r\n  const {FirstNameDisplay, FirstName} = Text({\r\n    name: \"firstName\",\r\n    validate: validateName\r\n  })\r\n  \r\n  return (\r\n    <>\r\n      <FirstName /> {/* form input */}\r\n      <FirstNameDisplay full={true} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Example","import React, { useState } from 'react'\r\nimport { field } from '@zecos/field'\r\nimport { validateName } from \"@zecos/validate\"\r\n\r\nconst renderErrors = state => {\r\n  const {touched, errors} = state\r\n  if (touched && errors.length) {\r\n    return (\r\n      <span style={{color: \"red\"}}>\r\n        {errors.map(err => <div>{err.toString()}</div>)}\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst Form = () => {\r\n  const [[actions, state], _setFormState] = useState(() => {\r\n    const _field = field({\r\n      init: '',\r\n      validate: validateName,\r\n    })\r\n    return [_field, _field.getState()]\r\n  })\r\n  \r\n  const {\r\n    setValue,\r\n    setTouched,\r\n    reset,\r\n    setState,\r\n    getState\r\n  } = actions\r\n  \r\n  const setFormState = state => _setFormState([actions, state])\r\n  \r\n  const {\r\n    errors,\r\n    value,\r\n    touched,\r\n    pristine\r\n  } = actions.getState()\r\n  \r\n  return (\r\n    <form style={{padding: 20}}>\r\n      <label htmlFor=\"name\">Name: </label>&nbsp;\r\n      <input\r\n        name=\"name\"\r\n        value={value}\r\n        onChange={e => setFormState(setValue(e.target.value))}\r\n        onBlur={_ => setFormState(setTouched())}\r\n      />\r\n      <br />\r\n      {renderErrors(state)}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from \"react\"\r\nimport { createInput } from '@zecos/input'\r\nimport { validateName } from \"@zecos/validate\"\r\n\r\nconst text = createInput(({helpers, state}) => {\r\n    const {\r\n      id,\r\n      name,\r\n      label,\r\n      handleChange,\r\n      handleBlur,\r\n    } = helpers\r\n    \r\n    const {touched, errors, value} = state\r\n    return (\r\n      <div>\r\n        <label htmlFor={name}>\r\n          {label}: &nbsp;\r\n        {touched && errors[0] && errors[0].toString()}\r\n        </label>\r\n        <input\r\n          name={name}\r\n          aria-label={label}\r\n          onChange={handleChange}\r\n          value={value}\r\n          onBlur={handleBlur}\r\n          id={id}\r\n        />\r\n      </div> \r\n    )\r\n})\r\n\r\nconst Form = () => {\r\n  const {FirstName, FirstNameDisplay} = text({\r\n    name: \"firstName\",\r\n    validate: validateName,\r\n    init: \"Bob\",\r\n  })\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <FirstName /><br />\r\n      <FirstNameDisplay full={true} />\r\n    </form> \r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport { createInput } from '@zecos/input'\r\n\r\nconst renderOption = ([key, label]) => {\r\n  return (\r\n    <option key={key} value={key}>\r\n      {label}\r\n    </option>\r\n  )\r\n}\r\n\r\nexport const select = createInput(({helpers, props}) => {\r\n  const {\r\n    id,\r\n    name,\r\n    value,\r\n    handleChange,\r\n    handleBlur,\r\n    label,\r\n    htmlFor,\r\n  } = helpers\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor={htmlFor}>\r\n        {label}: &nbsp;\r\n      </label>\r\n      <select\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        name={name}\r\n        id={id}\r\n        value={value}\r\n        aria-label={label}\r\n      >\r\n        {Object.entries(props.options).map(renderOption)}\r\n      </select>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport const Form = () => {\r\n  const {FavoriteColor, FavoriteColorDisplay} = select({\r\n    init: \"blue\",\r\n    name: \"favoriteColor\",\r\n    props: {\r\n     options: {green: \"Green\", blue: \"Blue\"} \r\n    }\r\n  })\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <FavoriteColor options={{blue: \"Blue\", red: \"Red\"}} />\r\n      <FavoriteColorDisplay />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport { createLayout } from \"@zecos/input\"\r\nimport { Text, Select, TextArea } from '@zecos/input-basic'\r\nimport { validateName } from '@zecos/validate'\r\n\r\nconst SimpleFormLayout = createLayout(({props, items, errors, helpers}) => {\r\n  return (\r\n    <form {...props}>\r\n      <div>{helpers.title}</div>\r\n      {errors[0] && errors[0].toString()}\r\n      {items.map((Input, i) => (\r\n        <span key={i}><Input.Cmpt key={i} /></span>\r\n      ))}\r\n    </form>\r\n  )\r\n})\r\n\r\nconst Example = () => {\r\n  const { Form, FormDisplay } = SimpleFormLayout({\r\n    name: 'form',\r\n    items: [\r\n      Text({\r\n        validate: validateName,\r\n        name: \"firstName\",\r\n        init: \"Zane\",\r\n      }),\r\n      TextArea({\r\n        name: \"describeYourself\"\r\n      }),\r\n      Select({\r\n        init: \"blue\",\r\n        name: \"favoriteColor\",\r\n        props: {\r\n          options: {\r\n            \"Blue\": \"blue\",\r\n            \"Red\": \"red\",\r\n          }\r\n        }\r\n      })\r\n    ],\r\n    validate: (items:any) => {\r\n      if (items[0].state.value === \"Zane\") {\r\n        return [new Error(\"Name cannot be Zane\")]\r\n      }\r\n      return []\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <div>\r\n      <Form />\r\n      <FormDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { createMulti } from '@zecos/input'\r\nimport { Text, GroupLayout } from '@zecos/input-basic'\r\nimport { validateName } from '@zecos/validate'\r\n\r\nconst Multi:any = createMulti(({items, actions, helpers}) => {\r\n  return <>\r\n    {items.map((Input, i) => (\r\n      <div key={i}>\r\n      <Input.Cmpt />\r\n      <button\r\n        style={{display: \"block\"}}\r\n        onClick={() => actions.splice(i, 1)}\r\n      >\r\n        Remove Person\r\n      </button>\r\n      </div>\r\n    ))}\r\n  </>\r\n})\r\n\r\nconst newPerson = () => GroupLayout({\r\n  name: 'person',\r\n  items: [\r\n    Text({\r\n      validate: validateName,\r\n      name: \"firstName\"\r\n    }),\r\n    Text({\r\n      validate: validateName,\r\n      name: \"lastName\",\r\n    }),\r\n  ],\r\n})\r\n\r\nconst MultiForm = () => {\r\n  const {actions, People, PeopleDisplay} = Multi({\r\n    init: [\r\n      newPerson()\r\n    ],\r\n    name: \"people\",\r\n  })\r\n  \r\n  return <div>\r\n      <People />\r\n      <PeopleDisplay />\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => actions.push(newPerson)}\r\n      >\r\n        Add Person\r\n      </button>\r\n    </div>\r\n}\r\n\r\n\r\nexport default MultiForm\r\n","import React from \"react\"\r\nimport { validateName } from \"@zecos/validate\"\r\nimport { TextInput} from \"@zecos/input-mui\"\r\n\r\nconst TextInputExample = () => {\r\n  const {FirstName, FirstNameDisplay} = TextInput({\r\n    validate: validateName,\r\n    init: '',\r\n    name: \"firstName\"\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <form className=\"form\">\r\n      <FirstName />\r\n      <FirstNameDisplay />\r\n    </form>\r\n    <br />\r\n    {/* display the data */}\r\n    </>\r\n  )\r\n}\r\n \r\nexport default TextInputExample","import React from \"react\"\r\nimport { SelectInput } from \"@zecos/input-mui\"\r\n\r\nconst SelectInputExample = () => {\r\n  const {FavoriteColor, FavoriteColorDisplay} = SelectInput({\r\n    init: \"blue\",\r\n    name: \"favoriteColor\",\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <form className=\"form\">\r\n      <FavoriteColor options={{\r\n        Blue: \"blue\",\r\n        Red: \"red\",\r\n      }}/>\r\n      <FavoriteColorDisplay />\r\n    </form>\r\n    <br />\r\n    {/* display the data */}\r\n    </>\r\n  )\r\n}\r\n \r\nexport default SelectInputExample\r\n","import React from 'react'\r\nimport { Text } from '@zecos/input-basic'\r\nimport { validateName } from '@zecos/validate'\r\n\r\n\r\nconst Example = () => {\r\n  const {FirstNameDisplay, Cmpt} = Text({\r\n    name: \"firstName\",\r\n    validate: validateName\r\n  })\r\n  \r\n  return (\r\n    <>\r\n      <Cmpt /> {/* form input */}\r\n      <FirstNameDisplay full={true} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { Text } from '@zecos/input-basic'\r\nimport { validateName } from '@zecos/validate'\r\n\r\n\r\nconst Example = () => {\r\n  const {Display, FirstName, Cmpt, FirstNameDisplay} = Text({\r\n    name: \"firstName\",\r\n    validate: validateName\r\n  })\r\n  console.log(\"display\", Display)\r\n  \r\n  return (\r\n    <>\r\n      <FirstName />\r\n      <Cmpt />  {/* same as above line */}\r\n      <Display full={true} />\r\n      <FirstNameDisplay full={true} /> {/* same as above line */}\r\n      <FirstNameDisplay /> {/* Without the \"full\" property, it just gets the value */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { Text } from '@zecos/input-basic'\r\nimport { validateName } from '@zecos/validate'\r\nimport { Button } from '@material-ui/core'\r\n\r\n\r\nconst Example = () => {\r\n  const {FirstName, Display, log, logFirstName} = Text({\r\n    name: \"firstName\",\r\n    validate: validateName\r\n  })\r\n  \r\n  return (\r\n    <>\r\n      <FirstName />\r\n      <Display />\r\n      <br />\r\n      <Button variant=\"contained\" onClick={log}>Log First Name Data</Button>\r\n      <br />\r\n      <br />\r\n      <div>These two buttons are equivalent. Check the console.</div>\r\n      <br />\r\n      <Button variant=\"contained\" onClick={logFirstName}>Log First Name Data</Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { validateName } from '@zecos/validate'\r\nimport { Text } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const { FirstName, FirstNameDisplay } = Text({\r\n    validate: validateName,\r\n    init: 'Harry',\r\n    name: \"firstName\"\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <FirstName />\r\n      <FirstNameDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { validateName } from '@zecos/validate'\r\nimport { TextArea } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const { DescribeYourself, DescribeYourselfDisplay } = TextArea({\r\n    validate: validateName,\r\n    init: 'I am a pretty cool dude...',\r\n    name: \"describeYourself\"\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <DescribeYourself />\r\n      <DescribeYourselfDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { validateName } from '@zecos/validate'\r\nimport { Select } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const { FavoriteColor, FavoriteColorDisplay } = Select({\r\n    init: 'blue',\r\n    name: \"favoriteColor\"\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <FavoriteColor\r\n        options={{\r\n          \"Red\": \"red\",\r\n          \"Blue\": \"blue\",\r\n          \"Purple\": \"purple\",\r\n          \"Black\": \"black\",\r\n        }}\r\n      />\r\n      <FavoriteColorDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { Slider } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const { Angle, AngleDisplay } = Slider({\r\n    init: 0,\r\n    name: \"angle\"\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Angle\r\n        min=\"0\"\r\n        max=\"90\"\r\n        step=\"0.5\"\r\n      />\r\n      <AngleDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { Checkbox } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const { Cool, CoolDisplay } = Checkbox({\r\n    init: true,\r\n    name: \"cool\",\r\n    label: \"I am cool\",\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Cool />\r\n      <CoolDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { Radio } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const { FavoriteFlavorOfIceCream, FavoriteFlavorOfIceCreamDisplay } = Radio({\r\n    init: 'chocolate',\r\n    name: \"favoriteFlavorOfIceCream\"\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <FavoriteFlavorOfIceCream\r\n        options={{\r\n          \"Rocky Road\": \"rockyroad\",\r\n          \"Chocolate\": \"chocolate\",\r\n          \"Vanilla\": \"vanilla\",\r\n        }}\r\n      />\r\n      <FavoriteFlavorOfIceCreamDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { Button } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const Btn = <Button\r\n    label=\"You can also include the label as a property\"\r\n    onClick={e => {\r\n      e.preventDefault()\r\n      window.alert(\"as well as the onClick property\")\r\n    }}\r\n  />\r\n  return (\r\n    <div style={{color: \"#2E3440\"}}> {/* color is inherited from the parent */}\r\n      <Button\r\n        onClick={e => {\r\n          e.preventDefault()\r\n          window.alert(\"You clicked me!\")\r\n        }}\r\n      >\r\n        Click Me\r\n      </Button>\r\n      {Btn}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { Checkbox, GroupLayout } from '@zecos/input-basic'\r\n\r\nconst Example = () => {\r\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\r\n    name: \"bandsILike\",\r\n    items: [\r\n      Checkbox({\r\n        name: \"blink182\",\r\n        init: false,\r\n      }),\r\n      Checkbox({\r\n        name: \"sum41\",\r\n        init: false,\r\n      }),\r\n      Checkbox({\r\n        name: \"redHotChiliPeppers\",\r\n        init: false,\r\n      }),\r\n    ],\r\n    validate: (items) => {\r\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\r\n      if (totalLiked > 2) {\r\n        return [new Error(\"Pick no more than 2.\")]\r\n      }\r\n      return []\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <div>\r\n      <BandsILike />\r\n      <br />\r\n      <BandsILikeDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { validateUsername, validatePassword } from \"@zecos/validate\"\r\nimport { Text, SimpleForm } from \"@zecos/input-basic\"\r\n\r\nconst SignInCmpt = () => {\r\n    const {SignIn, handleErrors /* with aliases Cmpt, signInHandleErrors */}  = SimpleForm({\r\n        name: 'signIn',\r\n        items: [\r\n            Text({\r\n                validate: validateUsername,\r\n                name: \"username\",\r\n                init: \"\", // defaults to blank\r\n            }),\r\n            Text({\r\n                validate: validatePassword,\r\n                name: \"password\",\r\n                init: \"\",\r\n            }),\r\n        ],\r\n        action: ({values}) => {\r\n            return fetch(\"/api/sign-in\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(values())\r\n            })\r\n            .then(handleErrors) // handle errors automatically displays the error for you\r\n            .then(() => window.location.href = \"/\") // redirect to home page, however you do that\r\n            .catch(()=>{ /* already handled for you */})\r\n        },\r\n        loadingText: \"Signing In...\" // customize the button text while it's loading\r\n    })\r\n\r\n    return (\r\n        <div style={{width: \"400px\", margin: \"0 auto\"}}>\r\n            {SignIn}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInCmpt","import React from 'react'\r\nimport { Text, GroupLayout, Multi } from '@zecos/input-basic'\r\nimport { validateName } from '@zecos/validate'\r\n\r\nconst newPerson = () => GroupLayout({\r\n  name: 'person',\r\n  items: [\r\n    Text({\r\n      validate: validateName,\r\n      name: \"firstName\"\r\n    }),\r\n    Text({\r\n      validate: validateName,\r\n      name: \"lastName\",\r\n    }),\r\n  ],\r\n})\r\n\r\nconst MultiForm = () => {\r\n  const {actions, People, PeopleDisplay} = Multi({\r\n    init: [\r\n      newPerson()\r\n    ],\r\n    name: \"people\",\r\n  })\r\n  \r\n  return <div>\r\n      <People />\r\n      <PeopleDisplay />\r\n      <button type=\"button\" onClick={() => actions.push(newPerson)}>Add Person</button>\r\n    </div>\r\n}\r\n\r\n\r\nexport default MultiForm\r\n","import React from \"react\"\r\nimport { RadioInput} from \"@zecos/input-mui\"\r\n\r\nconst Example = () => {\r\n  const {FavoriteFlavor, FavoriteFlavorDisplay} = RadioInput({\r\n    init: \"rockyroad\",\r\n    name: \"favoriteFlavor\",\r\n    label: \"Favorite Flavor of Ice Cream\",\r\n  })\r\n\r\n  return (\r\n    <>\r\n    <form className=\"form\">\r\n      <FavoriteFlavor\r\n        options={{\r\n          \"Rocky Road\": \"rockyroad\",\r\n          Chocolate: \"chocolate\",\r\n          Vanilla: \"vanilla\",\r\n        }}\r\n      />\r\n      <FavoriteFlavorDisplay />\r\n    </form>\r\n    <br />\r\n    {/* display the data */}\r\n    </>\r\n  )\r\n}\r\n \r\nexport default Example","import React from 'react'\r\nimport { CheckboxInput } from '@zecos/input-mui'\r\n\r\nconst Example = () => {\r\n  const { Cool, CoolDisplay } = CheckboxInput({\r\n    init: true,\r\n    name: \"cool\",\r\n    label: \"I am cool\",\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Cool />\r\n      <CoolDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { SwitchInput } from '@zecos/input-mui'\r\n\r\nconst Example = () => {\r\n  const {Light, LightDisplay, state } = SwitchInput({\r\n    init: false,\r\n    name: \"light\",\r\n  })\r\n  \r\n  const style = {\r\n    background: state.value ? \"yellow\" : \"black\",\r\n    color: state.value ? \"black\" : \"white\",\r\n    padding: 15,\r\n    borderRadius: 4,\r\n  }\r\n\r\n  return (\r\n    <div style={style}>\r\n      <Light />\r\n      <LightDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { SliderInput } from '@zecos/input-mui'\r\n\r\nconst Example = () => {\r\n  const {Temperature, TemperatureDisplay} = SliderInput({\r\n    init: 30,\r\n    name: 'temperature',\r\n    props: {\r\n      min: 0,\r\n      max: 100,\r\n      step: 10,\r\n      marks: [...new Array(11)]\r\n        .map((_, num) => ({\r\n          label: `${num * 10}°C`,\r\n          value: num * 10\r\n        })),\r\n    }\r\n  })\r\n  \r\n  const {TemperatureVertical, TemperatureVerticalDisplay} = SliderInput({\r\n    init: 30,\r\n    name: 'temperatureVertical',\r\n    props: {\r\n      min: 0,\r\n      max: 100,\r\n      step: 10,\r\n      orientation: \"vertical\",\r\n      marks: [...new Array(11)]\r\n        .map((_, num) => ({\r\n          label: `${num * 10}°C`,\r\n          value: num * 10\r\n        })),\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Temperature />\r\n      <br />\r\n      <TemperatureVertical />\r\n      <TemperatureDisplay />\r\n      <TemperatureVerticalDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { CheckboxInput, GroupLayout } from '@zecos/input-mui'\r\n\r\nconst Example = () => {\r\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\r\n    name: \"bandsILike\",\r\n    items: [\r\n      CheckboxInput({\r\n        init: false,\r\n        name: \"systemOfADown\",\r\n      }),\r\n      CheckboxInput({\r\n        init: false,\r\n        name: \"blink182\",\r\n      }),\r\n      CheckboxInput({\r\n        init: false,\r\n        name: \"sum41\"\r\n      }),\r\n    ],\r\n    validate: (items) => {\r\n      const totalLiked = items.reduce((acc, item) => (\r\n        acc + Number(item.state.value)\r\n      ), 0)\r\n      if (totalLiked > 2) {\r\n        return [new Error(\"Pick no more than 2.\")]\r\n      }\r\n      return []\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <BandsILike />\r\n      <br />\r\n      <BandsILikeDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport {\r\n  TextInput,\r\n  SelectInput,\r\n  RadioInput,\r\n  CheckboxInput,\r\n  GroupLayout,\r\n  SimpleFormLayout,\r\n  SwitchInput,\r\n  SliderInput,\r\n} from '@zecos/input-mui'\r\nimport { validateName } from '@zecos/validate'\r\n\r\nconst Example = () => {\r\n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\r\n    name: \"myForm\",\r\n    items: [\r\n      TextInput({\r\n        validate: validateName,\r\n        init: '',\r\n        name: \"firstName\"\r\n      }),\r\n      TextInput({\r\n        validate: validateName,\r\n        init: '',\r\n        name: \"lastName\"\r\n      }),\r\n      SelectInput({\r\n        init: \"blue\",\r\n        name: \"favoriteColor\",\r\n        label: \"What is your favorite color?\",\r\n        props: {\r\n          options: {\r\n            Blue: \"blue\",\r\n            Red: \"red\",\r\n            Pink: \"pink\",\r\n            Purple: \"purple\",\r\n          }\r\n        }\r\n      }),\r\n      RadioInput({\r\n        init: \"rockyroad\",\r\n        name: \"favoriteFlavor\",\r\n        label: \"Favorite Flavor of Ice Cream\",\r\n        props: {\r\n          options: {\r\n            \"Rocky Road\": \"rockyroad\",\r\n            Chocolate: \"chocolate\",\r\n            Vanilla: \"vanilla\",\r\n          }\r\n        },\r\n      }),\r\n      CheckboxInput({\r\n        init: true,\r\n        name: \"cool\",\r\n        label: \"I am cool\",\r\n      }),\r\n      SwitchInput({\r\n        init: false,\r\n        name: \"light\",\r\n      }),\r\n      SliderInput({\r\n        init: 30,\r\n        name: 'temperatureVertical',\r\n        props: {\r\n          min: 0,\r\n          max: 100,\r\n          step: 10,\r\n          marks: [...new Array(11)]\r\n            .map((_, num) => ({\r\n              label: `${num * 10}°C`,\r\n              value: num * 10\r\n            })),\r\n        }\r\n      }),\r\n      GroupLayout({\r\n        name: \"bandsILike\",\r\n        items: [\r\n          CheckboxInput({\r\n            init: false,\r\n            name: \"systemOfADown\",\r\n          }),\r\n          CheckboxInput({\r\n            init: false,\r\n            name: \"blink182\",\r\n          }),\r\n          CheckboxInput({\r\n            init: false,\r\n            name: \"sum41\"\r\n          }),\r\n        ],\r\n        validate: (items) => {\r\n          const totalLiked = items.reduce((acc, item) => (\r\n            acc + Number(item.state.value)\r\n          ), 0)\r\n          if (totalLiked > 2) {\r\n            return [new Error(\"Pick no more than 2.\")]\r\n          }\r\n          return []\r\n        }\r\n      })\r\n    ],\r\n  })\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    window.alert(\"Submitted sucessfully!\")\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <MyForm onSubmit={handleSubmit} />\r\n      <br />\r\n      <MyFormDisplay />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Example","import React from 'react'\r\nimport { TextInput, GroupLayout, Multi } from '@zecos/input-mui'\r\nimport { Button } from \"@material-ui/core\"\r\nimport { validateName } from '@zecos/validate'\r\n\r\nconst newPerson = () => GroupLayout({\r\n  name: 'friend',\r\n  items: [\r\n    TextInput({\r\n      validate: validateName,\r\n      name: \"firstName\"\r\n    }),\r\n    TextInput({\r\n      validate: validateName,\r\n      name: \"lastName\",\r\n    }),\r\n  ],\r\n})\r\n\r\nconst MultiForm = () => {\r\n  const {actions, Friends, FriendsDisplay} = Multi({\r\n    init: [\r\n      newPerson()\r\n    ],\r\n    name: \"friends\",\r\n  })\r\n  \r\n  return <div>\r\n      <Friends />\r\n      <br />\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outlined\"\r\n        onClick={() => actions.push(newPerson)}\r\n      >\r\n        Add Person\r\n      </Button>\r\n      <br />\r\n      <br />\r\n      <FriendsDisplay />\r\n    </div>\r\n}\r\n\r\nexport default MultiForm","import React from 'react'\r\nimport { DatePickerInput } from '@zecos/input-picker'\r\n\r\nconst MultiForm = () => {\r\n  const {AppointmentDate, AppointmentDateDisplay} = DatePickerInput({\r\n    init: new Date,\r\n    name: 'appointmentDate'\r\n  })\r\n  \r\n  return <div>\r\n    <AppointmentDate />\r\n    <AppointmentDateDisplay />\r\n    </div>\r\n}\r\n\r\nexport default MultiForm","import React from 'react'\r\nimport { TimePickerInput } from '@zecos/input-picker'\r\n\r\nconst MultiForm = () => {\r\n  const {AppointmentTime, AppointmentTimeDisplay} = TimePickerInput({\r\n    init: new Date,\r\n    name: 'appointmentTime'\r\n  })\r\n  \r\n  return <div>\r\n    <AppointmentTime />\r\n    <AppointmentTimeDisplay />\r\n    </div>\r\n}\r\n\r\nexport default MultiForm","export const examples = {\n  \"0000_overview\": {\n    cmpt: require('./0000_overview'),\n    content: \"import React from 'react'\\r\\nimport { Text } from '@zecos/input-basic'\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\n\\r\\nconst Example = () => {\\r\\n  const {FirstNameDisplay, FirstName} = Text({\\r\\n    name: \\\"firstName\\\",\\r\\n    validate: validateName\\r\\n  })\\r\\n  \\r\\n  return (\\r\\n    <>\\r\\n      <FirstName /> {/* form input */}\\r\\n      <FirstNameDisplay full={true} />\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0010_field\": {\n    cmpt: require('./0010_field'),\n    content: \"import React, { useState } from 'react'\\r\\nimport { field } from '@zecos/field'\\r\\nimport { validateName } from \\\"@zecos/validate\\\"\\r\\n\\r\\nconst renderErrors = state => {\\r\\n  const {touched, errors} = state\\r\\n  if (touched && errors.length) {\\r\\n    return (\\r\\n      <span style={{color: \\\"red\\\"}}>\\r\\n        {errors.map(err => <div>{err.toString()}</div>)}\\r\\n      </span>\\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\nconst Form = () => {\\r\\n  const [[actions, state], _setFormState] = useState(() => {\\r\\n    const _field = field({\\r\\n      init: '',\\r\\n      validate: validateName,\\r\\n    })\\r\\n    return [_field, _field.getState()]\\r\\n  })\\r\\n  \\r\\n  const {\\r\\n    setValue,\\r\\n    setTouched,\\r\\n    reset,\\r\\n    setState,\\r\\n    getState\\r\\n  } = actions\\r\\n  \\r\\n  const setFormState = state => _setFormState([actions, state])\\r\\n  \\r\\n  const {\\r\\n    errors,\\r\\n    value,\\r\\n    touched,\\r\\n    pristine\\r\\n  } = actions.getState()\\r\\n  \\r\\n  return (\\r\\n    <form style={{padding: 20}}>\\r\\n      <label htmlFor=\\\"name\\\">Name: </label>&nbsp;\\r\\n      <input\\r\\n        name=\\\"name\\\"\\r\\n        value={value}\\r\\n        onChange={e => setFormState(setValue(e.target.value))}\\r\\n        onBlur={_ => setFormState(setTouched())}\\r\\n      />\\r\\n      <br />\\r\\n      {renderErrors(state)}\\r\\n    </form>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Form\\r\\n\"\n  },\"0020_create-input\": {\n    cmpt: require('./0020_create-input'),\n    content: \"import React from \\\"react\\\"\\r\\nimport { createInput } from '@zecos/input'\\r\\nimport { validateName } from \\\"@zecos/validate\\\"\\r\\n\\r\\nconst text = createInput(({helpers, state}) => {\\r\\n    const {\\r\\n      id,\\r\\n      name,\\r\\n      label,\\r\\n      handleChange,\\r\\n      handleBlur,\\r\\n    } = helpers\\r\\n    \\r\\n    const {touched, errors, value} = state\\r\\n    return (\\r\\n      <div>\\r\\n        <label htmlFor={name}>\\r\\n          {label}: &nbsp;\\r\\n        {touched && errors[0] && errors[0].toString()}\\r\\n        </label>\\r\\n        <input\\r\\n          name={name}\\r\\n          aria-label={label}\\r\\n          onChange={handleChange}\\r\\n          value={value}\\r\\n          onBlur={handleBlur}\\r\\n          id={id}\\r\\n        />\\r\\n      </div> \\r\\n    )\\r\\n})\\r\\n\\r\\nconst Form = () => {\\r\\n  const {FirstName, FirstNameDisplay} = text({\\r\\n    name: \\\"firstName\\\",\\r\\n    validate: validateName,\\r\\n    init: \\\"Bob\\\",\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <form className=\\\"form\\\">\\r\\n      <FirstName /><br />\\r\\n      <FirstNameDisplay full={true} />\\r\\n    </form> \\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Form\"\n  },\"0030_create-input-select\": {\n    cmpt: require('./0030_create-input-select'),\n    content: \"import React from 'react'\\r\\nimport { createInput } from '@zecos/input'\\r\\n\\r\\nconst renderOption = ([key, label]) => {\\r\\n  return (\\r\\n    <option key={key} value={key}>\\r\\n      {label}\\r\\n    </option>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport const select = createInput(({helpers, props}) => {\\r\\n  const {\\r\\n    id,\\r\\n    name,\\r\\n    value,\\r\\n    handleChange,\\r\\n    handleBlur,\\r\\n    label,\\r\\n    htmlFor,\\r\\n  } = helpers\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <label htmlFor={htmlFor}>\\r\\n        {label}: &nbsp;\\r\\n      </label>\\r\\n      <select\\r\\n        onChange={handleChange}\\r\\n        onBlur={handleBlur}\\r\\n        name={name}\\r\\n        id={id}\\r\\n        value={value}\\r\\n        aria-label={label}\\r\\n      >\\r\\n        {Object.entries(props.options).map(renderOption)}\\r\\n      </select>\\r\\n    </div>\\r\\n  )\\r\\n})\\r\\n\\r\\nexport const Form = () => {\\r\\n  const {FavoriteColor, FavoriteColorDisplay} = select({\\r\\n    init: \\\"blue\\\",\\r\\n    name: \\\"favoriteColor\\\",\\r\\n    props: {\\r\\n     options: {green: \\\"Green\\\", blue: \\\"Blue\\\"} \\r\\n    }\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <form className=\\\"form\\\">\\r\\n      <FavoriteColor options={{blue: \\\"Blue\\\", red: \\\"Red\\\"}} />\\r\\n      <FavoriteColorDisplay />\\r\\n    </form>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Form\"\n  },\"0040_create-layout\": {\n    cmpt: require('./0040_create-layout'),\n    content: \"import React from 'react'\\r\\nimport { createLayout } from \\\"@zecos/input\\\"\\r\\nimport { Text, Select, TextArea } from '@zecos/input-basic'\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\nconst SimpleFormLayout = createLayout(({props, items, errors, helpers}) => {\\r\\n  return (\\r\\n    <form {...props}>\\r\\n      <div>{helpers.title}</div>\\r\\n      {errors[0] && errors[0].toString()}\\r\\n      {items.map((Input, i) => (\\r\\n        <span key={i}><Input.Cmpt key={i} /></span>\\r\\n      ))}\\r\\n    </form>\\r\\n  )\\r\\n})\\r\\n\\r\\nconst Example = () => {\\r\\n  const { Form, FormDisplay } = SimpleFormLayout({\\r\\n    name: 'form',\\r\\n    items: [\\r\\n      Text({\\r\\n        validate: validateName,\\r\\n        name: \\\"firstName\\\",\\r\\n        init: \\\"Zane\\\",\\r\\n      }),\\r\\n      TextArea({\\r\\n        name: \\\"describeYourself\\\"\\r\\n      }),\\r\\n      Select({\\r\\n        init: \\\"blue\\\",\\r\\n        name: \\\"favoriteColor\\\",\\r\\n        props: {\\r\\n          options: {\\r\\n            \\\"Blue\\\": \\\"blue\\\",\\r\\n            \\\"Red\\\": \\\"red\\\",\\r\\n          }\\r\\n        }\\r\\n      })\\r\\n    ],\\r\\n    validate: (items:any) => {\\r\\n      if (items[0].state.value === \\\"Zane\\\") {\\r\\n        return [new Error(\\\"Name cannot be Zane\\\")]\\r\\n      }\\r\\n      return []\\r\\n    }\\r\\n  })\\r\\n  \\r\\n  return (\\r\\n    <div>\\r\\n      <Form />\\r\\n      <FormDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0050_create-multi\": {\n    cmpt: require('./0050_create-multi'),\n    content: \"import React from 'react'\\r\\nimport { createMulti } from '@zecos/input'\\r\\nimport { Text, GroupLayout } from '@zecos/input-basic'\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\nconst Multi:any = createMulti(({items, actions, helpers}) => {\\r\\n  return <>\\r\\n    {items.map((Input, i) => (\\r\\n      <div key={i}>\\r\\n      <Input.Cmpt />\\r\\n      <button\\r\\n        style={{display: \\\"block\\\"}}\\r\\n        onClick={() => actions.splice(i, 1)}\\r\\n      >\\r\\n        Remove Person\\r\\n      </button>\\r\\n      </div>\\r\\n    ))}\\r\\n  </>\\r\\n})\\r\\n\\r\\nconst newPerson = () => GroupLayout({\\r\\n  name: 'person',\\r\\n  items: [\\r\\n    Text({\\r\\n      validate: validateName,\\r\\n      name: \\\"firstName\\\"\\r\\n    }),\\r\\n    Text({\\r\\n      validate: validateName,\\r\\n      name: \\\"lastName\\\",\\r\\n    }),\\r\\n  ],\\r\\n})\\r\\n\\r\\nconst MultiForm = () => {\\r\\n  const {actions, People, PeopleDisplay} = Multi({\\r\\n    init: [\\r\\n      newPerson()\\r\\n    ],\\r\\n    name: \\\"people\\\",\\r\\n  })\\r\\n  \\r\\n  return <div>\\r\\n      <People />\\r\\n      <PeopleDisplay />\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        onClick={() => actions.push(newPerson)}\\r\\n      >\\r\\n        Add Person\\r\\n      </button>\\r\\n    </div>\\r\\n}\\r\\n\\r\\n\\r\\nexport default MultiForm\\r\\n\"\n  },\"0060_text-input\": {\n    cmpt: require('./0060_text-input'),\n    content: \"import React from \\\"react\\\"\\r\\nimport { validateName } from \\\"@zecos/validate\\\"\\r\\nimport { TextInput} from \\\"@zecos/input-mui\\\"\\r\\n\\r\\nconst TextInputExample = () => {\\r\\n  const {FirstName, FirstNameDisplay} = TextInput({\\r\\n    validate: validateName,\\r\\n    init: '',\\r\\n    name: \\\"firstName\\\"\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n    <form className=\\\"form\\\">\\r\\n      <FirstName />\\r\\n      <FirstNameDisplay />\\r\\n    </form>\\r\\n    <br />\\r\\n    {/* display the data */}\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n \\r\\nexport default TextInputExample\"\n  },\"0070_select-input\": {\n    cmpt: require('./0070_select-input'),\n    content: \"import React from \\\"react\\\"\\r\\nimport { SelectInput } from \\\"@zecos/input-mui\\\"\\r\\n\\r\\nconst SelectInputExample = () => {\\r\\n  const {FavoriteColor, FavoriteColorDisplay} = SelectInput({\\r\\n    init: \\\"blue\\\",\\r\\n    name: \\\"favoriteColor\\\",\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n    <form className=\\\"form\\\">\\r\\n      <FavoriteColor options={{\\r\\n        Blue: \\\"blue\\\",\\r\\n        Red: \\\"red\\\",\\r\\n      }}/>\\r\\n      <FavoriteColorDisplay />\\r\\n    </form>\\r\\n    <br />\\r\\n    {/* display the data */}\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n \\r\\nexport default SelectInputExample\\r\\n\"\n  },\"0080_library-general\": {\n    cmpt: require('./0080_library-general'),\n    content: \"import React from 'react'\\r\\nimport { Text } from '@zecos/input-basic'\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\n\\r\\nconst Example = () => {\\r\\n  const {FirstNameDisplay, Cmpt} = Text({\\r\\n    name: \\\"firstName\\\",\\r\\n    validate: validateName\\r\\n  })\\r\\n  \\r\\n  return (\\r\\n    <>\\r\\n      <Cmpt /> {/* form input */}\\r\\n      <FirstNameDisplay full={true} />\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0090_library-replaced\": {\n    cmpt: require('./0090_library-replaced'),\n    content: \"import React from 'react'\\r\\nimport { Text } from '@zecos/input-basic'\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\n\\r\\nconst Example = () => {\\r\\n  const {Display, FirstName, Cmpt, FirstNameDisplay} = Text({\\r\\n    name: \\\"firstName\\\",\\r\\n    validate: validateName\\r\\n  })\\r\\n  console.log(\\\"display\\\", Display)\\r\\n  \\r\\n  return (\\r\\n    <>\\r\\n      <FirstName />\\r\\n      <Cmpt />  {/* same as above line */}\\r\\n      <Display full={true} />\\r\\n      <FirstNameDisplay full={true} /> {/* same as above line */}\\r\\n      <FirstNameDisplay /> {/* Without the \\\"full\\\" property, it just gets the value */}\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0100_library-logging\": {\n    cmpt: require('./0100_library-logging'),\n    content: \"import React from 'react'\\r\\nimport { Text } from '@zecos/input-basic'\\r\\nimport { validateName } from '@zecos/validate'\\r\\nimport { Button } from '@material-ui/core'\\r\\n\\r\\n\\r\\nconst Example = () => {\\r\\n  const {FirstName, Display, log, logFirstName} = Text({\\r\\n    name: \\\"firstName\\\",\\r\\n    validate: validateName\\r\\n  })\\r\\n  \\r\\n  return (\\r\\n    <>\\r\\n      <FirstName />\\r\\n      <Display />\\r\\n      <br />\\r\\n      <Button variant=\\\"contained\\\" onClick={log}>Log First Name Data</Button>\\r\\n      <br />\\r\\n      <br />\\r\\n      <div>These two buttons are equivalent. Check the console.</div>\\r\\n      <br />\\r\\n      <Button variant=\\\"contained\\\" onClick={logFirstName}>Log First Name Data</Button>\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0110_basic-text\": {\n    cmpt: require('./0110_basic-text'),\n    content: \"import React from 'react'\\r\\nimport { validateName } from '@zecos/validate'\\r\\nimport { Text } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { FirstName, FirstNameDisplay } = Text({\\r\\n    validate: validateName,\\r\\n    init: 'Harry',\\r\\n    name: \\\"firstName\\\"\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FirstName />\\r\\n      <FirstNameDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0120_basic-textarea\": {\n    cmpt: require('./0120_basic-textarea'),\n    content: \"import React from 'react'\\r\\nimport { validateName } from '@zecos/validate'\\r\\nimport { TextArea } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { DescribeYourself, DescribeYourselfDisplay } = TextArea({\\r\\n    validate: validateName,\\r\\n    init: 'I am a pretty cool dude...',\\r\\n    name: \\\"describeYourself\\\"\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <DescribeYourself />\\r\\n      <DescribeYourselfDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0130_basic-select\": {\n    cmpt: require('./0130_basic-select'),\n    content: \"import React from 'react'\\r\\nimport { validateName } from '@zecos/validate'\\r\\nimport { Select } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { FavoriteColor, FavoriteColorDisplay } = Select({\\r\\n    init: 'blue',\\r\\n    name: \\\"favoriteColor\\\"\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FavoriteColor\\r\\n        options={{\\r\\n          \\\"Red\\\": \\\"red\\\",\\r\\n          \\\"Blue\\\": \\\"blue\\\",\\r\\n          \\\"Purple\\\": \\\"purple\\\",\\r\\n          \\\"Black\\\": \\\"black\\\",\\r\\n        }}\\r\\n      />\\r\\n      <FavoriteColorDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0140_basic-slider\": {\n    cmpt: require('./0140_basic-slider'),\n    content: \"import React from 'react'\\r\\nimport { Slider } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { Angle, AngleDisplay } = Slider({\\r\\n    init: 0,\\r\\n    name: \\\"angle\\\"\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Angle\\r\\n        min=\\\"0\\\"\\r\\n        max=\\\"90\\\"\\r\\n        step=\\\"0.5\\\"\\r\\n      />\\r\\n      <AngleDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0150_basic-checkbox\": {\n    cmpt: require('./0150_basic-checkbox'),\n    content: \"import React from 'react'\\r\\nimport { Checkbox } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { Cool, CoolDisplay } = Checkbox({\\r\\n    init: true,\\r\\n    name: \\\"cool\\\",\\r\\n    label: \\\"I am cool\\\",\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Cool />\\r\\n      <CoolDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0160_basic-radio\": {\n    cmpt: require('./0160_basic-radio'),\n    content: \"import React from 'react'\\r\\nimport { Radio } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { FavoriteFlavorOfIceCream, FavoriteFlavorOfIceCreamDisplay } = Radio({\\r\\n    init: 'chocolate',\\r\\n    name: \\\"favoriteFlavorOfIceCream\\\"\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <FavoriteFlavorOfIceCream\\r\\n        options={{\\r\\n          \\\"Rocky Road\\\": \\\"rockyroad\\\",\\r\\n          \\\"Chocolate\\\": \\\"chocolate\\\",\\r\\n          \\\"Vanilla\\\": \\\"vanilla\\\",\\r\\n        }}\\r\\n      />\\r\\n      <FavoriteFlavorOfIceCreamDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0165_basic-button\": {\n    cmpt: require('./0165_basic-button'),\n    content: \"import React from 'react'\\r\\nimport { Button } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const Btn = <Button\\r\\n    label=\\\"You can also include the label as a property\\\"\\r\\n    onClick={e => {\\r\\n      e.preventDefault()\\r\\n      window.alert(\\\"as well as the onClick property\\\")\\r\\n    }}\\r\\n  />\\r\\n  return (\\r\\n    <div style={{color: \\\"#2E3440\\\"}}> {/* color is inherited from the parent */}\\r\\n      <Button\\r\\n        onClick={e => {\\r\\n          e.preventDefault()\\r\\n          window.alert(\\\"You clicked me!\\\")\\r\\n        }}\\r\\n      >\\r\\n        Click Me\\r\\n      </Button>\\r\\n      {Btn}\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0170_basic-group-layout\": {\n    cmpt: require('./0170_basic-group-layout'),\n    content: \"import React from 'react'\\r\\nimport { Checkbox, GroupLayout } from '@zecos/input-basic'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\\r\\n    name: \\\"bandsILike\\\",\\r\\n    items: [\\r\\n      Checkbox({\\r\\n        name: \\\"blink182\\\",\\r\\n        init: false,\\r\\n      }),\\r\\n      Checkbox({\\r\\n        name: \\\"sum41\\\",\\r\\n        init: false,\\r\\n      }),\\r\\n      Checkbox({\\r\\n        name: \\\"redHotChiliPeppers\\\",\\r\\n        init: false,\\r\\n      }),\\r\\n    ],\\r\\n    validate: (items) => {\\r\\n      const totalLiked = items.reduce((acc, item) => acc + Number(item.state.value))\\r\\n      if (totalLiked > 2) {\\r\\n        return [new Error(\\\"Pick no more than 2.\\\")]\\r\\n      }\\r\\n      return []\\r\\n    }\\r\\n  })\\r\\n  \\r\\n  return (\\r\\n    <div>\\r\\n      <BandsILike />\\r\\n      <br />\\r\\n      <BandsILikeDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0180_basic-simple-form\": {\n    cmpt: require('./0180_basic-simple-form'),\n    content: \"import React from 'react'\\r\\nimport { validateUsername, validatePassword } from \\\"@zecos/validate\\\"\\r\\nimport { Text, SimpleForm } from \\\"@zecos/input-basic\\\"\\r\\n\\r\\nconst SignInCmpt = () => {\\r\\n    const {SignIn, handleErrors /* with aliases Cmpt, signInHandleErrors */}  = SimpleForm({\\r\\n        name: 'signIn',\\r\\n        items: [\\r\\n            Text({\\r\\n                validate: validateUsername,\\r\\n                name: \\\"username\\\",\\r\\n                init: \\\"\\\", // defaults to blank\\r\\n            }),\\r\\n            Text({\\r\\n                validate: validatePassword,\\r\\n                name: \\\"password\\\",\\r\\n                init: \\\"\\\",\\r\\n            }),\\r\\n        ],\\r\\n        action: ({values}) => {\\r\\n            return fetch(\\\"/api/sign-in\\\", {\\r\\n                method: \\\"POST\\\",\\r\\n                headers: {\\r\\n                    \\\"Content-Type\\\": \\\"application/json\\\",\\r\\n                },\\r\\n                body: JSON.stringify(values())\\r\\n            })\\r\\n            .then(handleErrors) // handle errors automatically displays the error for you\\r\\n            .then(() => window.location.href = \\\"/\\\") // redirect to home page, however you do that\\r\\n            .catch(()=>{ /* already handled for you */})\\r\\n        },\\r\\n        loadingText: \\\"Signing In...\\\" // customize the button text while it's loading\\r\\n    })\\r\\n\\r\\n    return (\\r\\n        <div style={{width: \\\"400px\\\", margin: \\\"0 auto\\\"}}>\\r\\n            {SignIn}\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default SignInCmpt\"\n  },\"0190_basic-multi\": {\n    cmpt: require('./0190_basic-multi'),\n    content: \"import React from 'react'\\r\\nimport { Text, GroupLayout, Multi } from '@zecos/input-basic'\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\nconst newPerson = () => GroupLayout({\\r\\n  name: 'person',\\r\\n  items: [\\r\\n    Text({\\r\\n      validate: validateName,\\r\\n      name: \\\"firstName\\\"\\r\\n    }),\\r\\n    Text({\\r\\n      validate: validateName,\\r\\n      name: \\\"lastName\\\",\\r\\n    }),\\r\\n  ],\\r\\n})\\r\\n\\r\\nconst MultiForm = () => {\\r\\n  const {actions, People, PeopleDisplay} = Multi({\\r\\n    init: [\\r\\n      newPerson()\\r\\n    ],\\r\\n    name: \\\"people\\\",\\r\\n  })\\r\\n  \\r\\n  return <div>\\r\\n      <People />\\r\\n      <PeopleDisplay />\\r\\n      <button type=\\\"button\\\" onClick={() => actions.push(newPerson)}>Add Person</button>\\r\\n    </div>\\r\\n}\\r\\n\\r\\n\\r\\nexport default MultiForm\\r\\n\"\n  },\"0200_mui-radio\": {\n    cmpt: require('./0200_mui-radio'),\n    content: \"import React from \\\"react\\\"\\r\\nimport { RadioInput} from \\\"@zecos/input-mui\\\"\\r\\n\\r\\nconst Example = () => {\\r\\n  const {FavoriteFlavor, FavoriteFlavorDisplay} = RadioInput({\\r\\n    init: \\\"rockyroad\\\",\\r\\n    name: \\\"favoriteFlavor\\\",\\r\\n    label: \\\"Favorite Flavor of Ice Cream\\\",\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n    <form className=\\\"form\\\">\\r\\n      <FavoriteFlavor\\r\\n        options={{\\r\\n          \\\"Rocky Road\\\": \\\"rockyroad\\\",\\r\\n          Chocolate: \\\"chocolate\\\",\\r\\n          Vanilla: \\\"vanilla\\\",\\r\\n        }}\\r\\n      />\\r\\n      <FavoriteFlavorDisplay />\\r\\n    </form>\\r\\n    <br />\\r\\n    {/* display the data */}\\r\\n    </>\\r\\n  )\\r\\n}\\r\\n \\r\\nexport default Example\"\n  },\"0210_mui-checkbox\": {\n    cmpt: require('./0210_mui-checkbox'),\n    content: \"import React from 'react'\\r\\nimport { CheckboxInput } from '@zecos/input-mui'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { Cool, CoolDisplay } = CheckboxInput({\\r\\n    init: true,\\r\\n    name: \\\"cool\\\",\\r\\n    label: \\\"I am cool\\\",\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Cool />\\r\\n      <CoolDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0220_mui-switch\": {\n    cmpt: require('./0220_mui-switch'),\n    content: \"import React from 'react'\\r\\nimport { SwitchInput } from '@zecos/input-mui'\\r\\n\\r\\nconst Example = () => {\\r\\n  const {Light, LightDisplay, state } = SwitchInput({\\r\\n    init: false,\\r\\n    name: \\\"light\\\",\\r\\n  })\\r\\n  \\r\\n  const style = {\\r\\n    background: state.value ? \\\"yellow\\\" : \\\"black\\\",\\r\\n    color: state.value ? \\\"black\\\" : \\\"white\\\",\\r\\n    padding: 15,\\r\\n    borderRadius: 4,\\r\\n  }\\r\\n\\r\\n  return (\\r\\n    <div style={style}>\\r\\n      <Light />\\r\\n      <LightDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0230_mui-slider\": {\n    cmpt: require('./0230_mui-slider'),\n    content: \"import React from 'react'\\r\\nimport { SliderInput } from '@zecos/input-mui'\\r\\n\\r\\nconst Example = () => {\\r\\n  const {Temperature, TemperatureDisplay} = SliderInput({\\r\\n    init: 30,\\r\\n    name: 'temperature',\\r\\n    props: {\\r\\n      min: 0,\\r\\n      max: 100,\\r\\n      step: 10,\\r\\n      marks: [...new Array(11)]\\r\\n        .map((_, num) => ({\\r\\n          label: `${num * 10}°C`,\\r\\n          value: num * 10\\r\\n        })),\\r\\n    }\\r\\n  })\\r\\n  \\r\\n  const {TemperatureVertical, TemperatureVerticalDisplay} = SliderInput({\\r\\n    init: 30,\\r\\n    name: 'temperatureVertical',\\r\\n    props: {\\r\\n      min: 0,\\r\\n      max: 100,\\r\\n      step: 10,\\r\\n      orientation: \\\"vertical\\\",\\r\\n      marks: [...new Array(11)]\\r\\n        .map((_, num) => ({\\r\\n          label: `${num * 10}°C`,\\r\\n          value: num * 10\\r\\n        })),\\r\\n    }\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Temperature />\\r\\n      <br />\\r\\n      <TemperatureVertical />\\r\\n      <TemperatureDisplay />\\r\\n      <TemperatureVerticalDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0240_mui-group-layout\": {\n    cmpt: require('./0240_mui-group-layout'),\n    content: \"import React from 'react'\\r\\nimport { CheckboxInput, GroupLayout } from '@zecos/input-mui'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { BandsILike, BandsILikeDisplay } = GroupLayout({\\r\\n    name: \\\"bandsILike\\\",\\r\\n    items: [\\r\\n      CheckboxInput({\\r\\n        init: false,\\r\\n        name: \\\"systemOfADown\\\",\\r\\n      }),\\r\\n      CheckboxInput({\\r\\n        init: false,\\r\\n        name: \\\"blink182\\\",\\r\\n      }),\\r\\n      CheckboxInput({\\r\\n        init: false,\\r\\n        name: \\\"sum41\\\"\\r\\n      }),\\r\\n    ],\\r\\n    validate: (items) => {\\r\\n      const totalLiked = items.reduce((acc, item) => (\\r\\n        acc + Number(item.state.value)\\r\\n      ), 0)\\r\\n      if (totalLiked > 2) {\\r\\n        return [new Error(\\\"Pick no more than 2.\\\")]\\r\\n      }\\r\\n      return []\\r\\n    }\\r\\n  })\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <BandsILike />\\r\\n      <br />\\r\\n      <BandsILikeDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0250_mui-simple-form-layout\": {\n    cmpt: require('./0250_mui-simple-form-layout'),\n    content: \"import React from 'react'\\r\\nimport {\\r\\n  TextInput,\\r\\n  SelectInput,\\r\\n  RadioInput,\\r\\n  CheckboxInput,\\r\\n  GroupLayout,\\r\\n  SimpleFormLayout,\\r\\n  SwitchInput,\\r\\n  SliderInput,\\r\\n} from '@zecos/input-mui'\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\nconst Example = () => {\\r\\n  const { MyForm, MyFormDisplay } = SimpleFormLayout({\\r\\n    name: \\\"myForm\\\",\\r\\n    items: [\\r\\n      TextInput({\\r\\n        validate: validateName,\\r\\n        init: '',\\r\\n        name: \\\"firstName\\\"\\r\\n      }),\\r\\n      TextInput({\\r\\n        validate: validateName,\\r\\n        init: '',\\r\\n        name: \\\"lastName\\\"\\r\\n      }),\\r\\n      SelectInput({\\r\\n        init: \\\"blue\\\",\\r\\n        name: \\\"favoriteColor\\\",\\r\\n        label: \\\"What is your favorite color?\\\",\\r\\n        props: {\\r\\n          options: {\\r\\n            Blue: \\\"blue\\\",\\r\\n            Red: \\\"red\\\",\\r\\n            Pink: \\\"pink\\\",\\r\\n            Purple: \\\"purple\\\",\\r\\n          }\\r\\n        }\\r\\n      }),\\r\\n      RadioInput({\\r\\n        init: \\\"rockyroad\\\",\\r\\n        name: \\\"favoriteFlavor\\\",\\r\\n        label: \\\"Favorite Flavor of Ice Cream\\\",\\r\\n        props: {\\r\\n          options: {\\r\\n            \\\"Rocky Road\\\": \\\"rockyroad\\\",\\r\\n            Chocolate: \\\"chocolate\\\",\\r\\n            Vanilla: \\\"vanilla\\\",\\r\\n          }\\r\\n        },\\r\\n      }),\\r\\n      CheckboxInput({\\r\\n        init: true,\\r\\n        name: \\\"cool\\\",\\r\\n        label: \\\"I am cool\\\",\\r\\n      }),\\r\\n      SwitchInput({\\r\\n        init: false,\\r\\n        name: \\\"light\\\",\\r\\n      }),\\r\\n      SliderInput({\\r\\n        init: 30,\\r\\n        name: 'temperatureVertical',\\r\\n        props: {\\r\\n          min: 0,\\r\\n          max: 100,\\r\\n          step: 10,\\r\\n          marks: [...new Array(11)]\\r\\n            .map((_, num) => ({\\r\\n              label: `${num * 10}°C`,\\r\\n              value: num * 10\\r\\n            })),\\r\\n        }\\r\\n      }),\\r\\n      GroupLayout({\\r\\n        name: \\\"bandsILike\\\",\\r\\n        items: [\\r\\n          CheckboxInput({\\r\\n            init: false,\\r\\n            name: \\\"systemOfADown\\\",\\r\\n          }),\\r\\n          CheckboxInput({\\r\\n            init: false,\\r\\n            name: \\\"blink182\\\",\\r\\n          }),\\r\\n          CheckboxInput({\\r\\n            init: false,\\r\\n            name: \\\"sum41\\\"\\r\\n          }),\\r\\n        ],\\r\\n        validate: (items) => {\\r\\n          const totalLiked = items.reduce((acc, item) => (\\r\\n            acc + Number(item.state.value)\\r\\n          ), 0)\\r\\n          if (totalLiked > 2) {\\r\\n            return [new Error(\\\"Pick no more than 2.\\\")]\\r\\n          }\\r\\n          return []\\r\\n        }\\r\\n      })\\r\\n    ],\\r\\n  })\\r\\n  \\r\\n  const handleSubmit = e => {\\r\\n    e.preventDefault()\\r\\n    window.alert(\\\"Submitted sucessfully!\\\")\\r\\n  }\\r\\n  \\r\\n  return (\\r\\n    <div>\\r\\n      <MyForm onSubmit={handleSubmit} />\\r\\n      <br />\\r\\n      <MyFormDisplay />\\r\\n    </div>\\r\\n  )\\r\\n}\\r\\n\\r\\nexport default Example\"\n  },\"0260_mui-multi\": {\n    cmpt: require('./0260_mui-multi'),\n    content: \"import React from 'react'\\r\\nimport { TextInput, GroupLayout, Multi } from '@zecos/input-mui'\\r\\nimport { Button } from \\\"@material-ui/core\\\"\\r\\nimport { validateName } from '@zecos/validate'\\r\\n\\r\\nconst newPerson = () => GroupLayout({\\r\\n  name: 'friend',\\r\\n  items: [\\r\\n    TextInput({\\r\\n      validate: validateName,\\r\\n      name: \\\"firstName\\\"\\r\\n    }),\\r\\n    TextInput({\\r\\n      validate: validateName,\\r\\n      name: \\\"lastName\\\",\\r\\n    }),\\r\\n  ],\\r\\n})\\r\\n\\r\\nconst MultiForm = () => {\\r\\n  const {actions, Friends, FriendsDisplay} = Multi({\\r\\n    init: [\\r\\n      newPerson()\\r\\n    ],\\r\\n    name: \\\"friends\\\",\\r\\n  })\\r\\n  \\r\\n  return <div>\\r\\n      <Friends />\\r\\n      <br />\\r\\n      <Button\\r\\n        type=\\\"button\\\"\\r\\n        variant=\\\"outlined\\\"\\r\\n        onClick={() => actions.push(newPerson)}\\r\\n      >\\r\\n        Add Person\\r\\n      </Button>\\r\\n      <br />\\r\\n      <br />\\r\\n      <FriendsDisplay />\\r\\n    </div>\\r\\n}\\r\\n\\r\\nexport default MultiForm\"\n  },\"0270_mui-date-picker\": {\n    cmpt: require('./0270_mui-date-picker'),\n    content: \"import React from 'react'\\r\\nimport { DatePickerInput } from '@zecos/input-picker'\\r\\n\\r\\nconst MultiForm = () => {\\r\\n  const {AppointmentDate, AppointmentDateDisplay} = DatePickerInput({\\r\\n    init: new Date,\\r\\n    name: 'appointmentDate'\\r\\n  })\\r\\n  \\r\\n  return <div>\\r\\n    <AppointmentDate />\\r\\n    <AppointmentDateDisplay />\\r\\n    </div>\\r\\n}\\r\\n\\r\\nexport default MultiForm\"\n  },\"0280_mui-time-picker\": {\n    cmpt: require('./0280_mui-time-picker'),\n    content: \"import React from 'react'\\r\\nimport { TimePickerInput } from '@zecos/input-picker'\\r\\n\\r\\nconst MultiForm = () => {\\r\\n  const {AppointmentTime, AppointmentTimeDisplay} = TimePickerInput({\\r\\n    init: new Date,\\r\\n    name: 'appointmentTime'\\r\\n  })\\r\\n  \\r\\n  return <div>\\r\\n    <AppointmentTime />\\r\\n    <AppointmentTimeDisplay />\\r\\n    </div>\\r\\n}\\r\\n\\r\\nexport default MultiForm\"\n  },\"0290_get-values\": {\n    cmpt: require('./0290_get-values'),\n    content: \"import React from 'react'\\r\\nimport { validateName } from \\\"@zecos/validate\\\"\\r\\nimport { Text } from \\\"@zecos/input-basic\\\"\\r\\nimport { getValues } from '@zecos/util'\\r\\n\\r\\nconst SignInCmpt = () => {\\r\\n    const { FirstName, firstName } = Text({\\r\\n        validate: validateName,\\r\\n        init: 'Harry',\\r\\n        name: \\\"firstName\\\"\\r\\n    })\\r\\n\\r\\n    const { MiddleName,  middleName } = Text({\\r\\n        validate: validateName,\\r\\n        init: 'James',\\r\\n        name: \\\"middleName\\\"\\r\\n    })\\r\\n\\r\\n    const { LastName,  lastName } = Text({\\r\\n        validate: validateName,\\r\\n        init: 'Potter',\\r\\n        name: \\\"lastName\\\"\\r\\n    })\\r\\n\\r\\n    const items = [firstName, middleName, lastName]\\r\\n\\r\\n    const singleValue = getValues(items, \\\"firstName\\\")\\r\\n    const multipleValues = getValues(items, \\\"firstName\\\", \\\"lastName\\\")\\r\\n    const alsoMultipleValues = getValues(items, [\\\"firstName\\\", \\\"lastName\\\"])\\r\\n    const allValues = getValues(items)\\r\\n\\r\\n    // output prettier\\r\\n    const neatify = obj => <pre>{JSON.stringify(obj, null, 2)}</pre>\\r\\n\\r\\n    return (\\r\\n        <div>\\r\\n            <FirstName />\\r\\n            <LastName />\\r\\n            <br />\\r\\n            Single Value: {neatify(singleValue)}\\r\\n            <br />\\r\\n            Multiple Values: {neatify(multipleValues)}\\r\\n            <br />\\r\\n            Also Multiple Values: {neatify(alsoMultipleValues)}\\r\\n            <br />\\r\\n            All Values: {neatify(allValues)}\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default SignInCmpt\\r\\n\"\n  }\n}","import React, { useEffect, useRef } from 'react'\r\nimport { examples } from '../examples/index'\r\nimport styles from './CodeBlock.module.css'\r\nimport './CodeBlock.css'\r\nimport 'prismjs'\r\n// import 'prismjs/themes/prism-tomorrow.css';\r\n// import 'prism-themes/themes/prism-darcula.css'\r\nimport './nord.css'\r\nimport './Fira/fira_code.css'\r\nimport 'prismjs/components/prism-jsx';\r\nimport 'prismjs/components/prism-tsx';\r\nimport 'prismjs/components/prism-typescript';\r\n\r\ndeclare var Prism: any\r\n\r\nconst HL = ({language, children}) => {\r\n  const codeEl = useRef(null)\r\n  useEffect(() => {\r\n    if (codeEl) {\r\n      Prism.highlightElement(codeEl.current)\r\n    }\r\n  }, [codeEl, language, children])\r\n  return (\r\n    <div className=\"code-block\">\r\n      <pre ref={codeEl} className={`language-${language} example`}>\r\n        {children}\r\n      </pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst startTag = \"example:\"\r\nexport const CodeBlock = ({language, value}) => {\r\n  if (value.startsWith(startTag)) {\r\n    const id = value.substr(startTag.length)\r\n    value = examples[id].content\r\n    const Cmpt = examples[id].cmpt.default\r\n    \r\n    return (\r\n      <>\r\n      <h3 className={styles.resultHeading}>Result</h3>\r\n      <div className={styles.result}>\r\n        <Cmpt />\r\n      </div>\r\n      <h3 className={styles.resultHeading}>Code</h3>\r\n      <HL language={language}>\r\n        {value}\r\n      </HL>\r\n      </>\r\n    )\r\n  }\r\n  return (\r\n    <HL language={language}>\r\n      {value}\r\n    </HL>\r\n  )\r\n}\r\n\r\n","import overview from \"./pages/overview.md\"\r\nimport createInputPage from \"./pages/input/create-input.md\"\r\nimport createLayoutPage from \"./pages/input/create-layout.md\"\r\nimport createMultiPage from \"./pages/input/create-multi.md\"\r\nimport fieldPage from './pages/general/field.md'\r\nimport inputMuiPage from './pages/ui-libraries/input-mui.md'\r\nimport inputBasicPage from './pages/ui-libraries/input-basic.md'\r\nimport inputPickerPage from './pages/ui-libraries/input-picker.md'\r\nimport inputOverviewPage from './pages/input/overview.md'\r\nimport uiOverviewPage from './pages/ui-libraries/overview.md'\r\nimport uiGeneralPage from './pages/ui-libraries/general.md'\r\nimport validatePage from './pages/general/validate.md'\r\nimport utilPage from './pages/general/util.md'\r\n\r\nexport const routes = [{\r\n    name: \"\",\r\n    children: [{\r\n      title: \"Overview\",\r\n      link: \"/\",\r\n      cmpt: overview,\r\n    }]\r\n  }, {\r\n    name: \"UI Libraries\",\r\n    children: [{\r\n      title: \"Overview\",\r\n      link: \"/ui-libraries/overview\",\r\n      cmpt: uiOverviewPage,\r\n    }, {\r\n      title: \"General\",\r\n      code: false,\r\n      link: \"/ui-libraries/general\",\r\n      cmpt: uiGeneralPage,\r\n    }, {\r\n      title: \"@zecos/input-basic\",\r\n      link: \"/ui-libraries/input-basic\",\r\n      cmpt: inputBasicPage,\r\n    }, {\r\n      title: \"@zecos/input-mui\",\r\n      link: \"/ui-libraries/input-mui\",\r\n      cmpt: inputMuiPage,\r\n    }, {\r\n      title: \"@zecos/input-picker\",\r\n      link: \"/ui-libraries/input-picker\",\r\n      cmpt: inputPickerPage,\r\n    }]\r\n  }, {\r\n    name: \"@zecos/input\",\r\n    children: [{\r\n      title: \"Overview\",\r\n      code: false,\r\n      link: \"/input/overview\",\r\n      cmpt: inputOverviewPage,\r\n    }, {\r\n      title: \"createInput\",\r\n      code: false,\r\n      link: \"/input/create-input\",\r\n      cmpt: createInputPage,\r\n    }, {\r\n      title: \"createLayout\",\r\n      link: \"/input/create-layout\",\r\n      cmpt: createLayoutPage,\r\n      code: false,\r\n    }, {\r\n      title: \"createMulti\",\r\n      link: \"/input/create-multi\",\r\n      cmpt: createMultiPage,\r\n      code: false,\r\n    }],\r\n  }, {\r\n  name: \"General\",\r\n  children: [{\r\n    title: \"@zecos/util\",\r\n    link: \"/util\",\r\n    cmpt: utilPage,\r\n  },{\r\n    title: \"@zecos/field\",\r\n    link: \"/field\",\r\n    cmpt: fieldPage,\r\n  }, {\r\n    title: \"@zecos/validate\",\r\n    link: \"/validate\",\r\n    cmpt: validatePage,\r\n  }]\r\n}]\r\n\r\n\r\nexport const getRouteLinks = () => {\r\n  const result: string[] = []\r\n  routes.forEach(route => {\r\n    route.children.forEach(child => {\r\n      result.push(child.link)\r\n    })\r\n  })\r\n  return result\r\n}","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useEffect, useState, createContext, useContext } from 'react'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles, Theme, createStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ReactMarkdown from 'react-markdown'\r\nimport './App.css'\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\"\r\nimport clsx from 'clsx'\r\nimport { CodeBlock } from './CodeBlock/CodeBlock';\r\nimport { routes } from './routes';\r\nimport { useTracking } from './useTracking';\r\n\r\n(() => {\r\n  // show the route links for the react-snapshot\r\n  // should probably move md files to public.\r\n  const routeLinks = routes.reduce((acc, cur) => {\r\n    cur.children.forEach(route => {\r\n      acc.push(route.link)\r\n    })\r\n    return acc\r\n  }, ([] as string[]))\r\n})()\r\n\r\n\r\nconst memoize = fn => {\r\n  const cache = {}\r\n  return (...args) => {\r\n    const key = JSON.stringify(args)\r\n    if (cache[key]) {\r\n      return cache[key]\r\n    }\r\n    return cache[key] = fn(...args)\r\n  }\r\n}\r\n const getMDText = memoize((file) => {\r\n  return fetch(file).then(res => res.text()) \r\n})\r\n\r\nconst getBodyHeight = () => {\r\n  const body = document.body\r\n  const html = document.documentElement\r\n  \r\n  return Math.max( body.scrollHeight, body.offsetHeight, \r\n    html.clientHeight, html.scrollHeight, html.offsetHeight )\r\n}\r\n\r\ndeclare var history: any;\r\ndeclare var location: any;\r\n\r\nconst scrollToId = (id) => {\r\n  const el = document.querySelector(id)\r\n  if (el) {\r\n    if (history.pushState) {\r\n      history.pushState(null, null, id);\r\n    }\r\n    else {\r\n      location.hash = id;\r\n    }\r\n    window.scrollTo(0, el.getBoundingClientRect().top - 80)\r\n  }\r\n}\r\n\r\nfunction flatten(text, child) {\r\n  return typeof child === 'string'\r\n    ? text + child\r\n    : React.Children.toArray(child.props.children).reduce(flatten, text)\r\n}\r\n\r\nconst getMd = (file: string) => () => {\r\n  const [cmpt, setCmpt] = useState(<div>Loading...</div>)\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const text = await getMDText(file)\r\n        setCmpt(<ReactMarkdown\r\n          source={text}\r\n          renderers={{\r\n            code: CodeBlock,\r\n            link: el => {\r\n              const {href} = el\r\n              const label = el.children[0].props.value\r\n              if (href.startsWith('/')) {\r\n                return <Link to={href}>{label}</Link>\r\n              } else if (href.startsWith('#')) {\r\n                return <a\r\n                  href={href}\r\n                  onClick={e => {\r\n                    e.preventDefault()\r\n                    scrollToId(href)\r\n                  }}\r\n                >\r\n                  {label}\r\n                </a>\r\n              }\r\n              return <a href={href}>{label}</a>\r\n            },\r\n            heading: (props) => {\r\n              const children = React.Children.toArray(props.children)\r\n              const text = children.reduce(flatten, '')\r\n              const slug = text.toLowerCase().replace(/\\W/g, '-')\r\n              return React.createElement('h' + props.level, {id: slug}, props.children)\r\n            }\r\n          }}\r\n        />)\r\n      } catch {\r\n        console.log(\"couldn't fetch file \" + file)\r\n      }\r\n    })()\r\n  }, [file])\r\n  return cmpt\r\n}\r\n\r\nconst drawerWidth = 240\r\nconst contentWidth = 1200\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    white: {\r\n      color: \"#D8DEE9\",\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      background: '#2E3440',\r\n      color: '#8FBCBB',\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      margin: \"0 auto\",\r\n      paddingBottom: theme.spacing(6),\r\n      maxWidth: 1200,\r\n      minWidth: window.innerWidth < 600 ? \"100%\" : 400,\r\n      boxSizing: \"border-box\",\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: drawerWidth + (window.innerWidth - drawerWidth - contentWidth ) / 2 - 24,\r\n    },\r\n    chevron: {\r\n      color: \"#D8DEE9\"\r\n    },\r\n    chevronBackground: {\r\n      '&:hover': {\r\n        backgroundColor: '#3B4252',\r\n      }\r\n    },\r\n    navLinks: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexFlow: 'row wrap',\r\n      fontSize: \"60px\",\r\n    },\r\n    navRight: {\r\n      flex: '0 0 0',\r\n      textAlign: 'center',\r\n      width: 100,\r\n      paddingRight: 40,\r\n    },\r\n    navLeft: {\r\n      flex: '0 0 0',\r\n      textAlign: 'center',\r\n      width: 100,\r\n      paddingLeft: 40,\r\n    },\r\n    largeFont: {\r\n      fontSize: '40px',\r\n    },\r\n    navSeparator: {\r\n      flex: '1 0 0'\r\n    },\r\n    menuCurrent: {\r\n      background: '#3B4252',\r\n    }\r\n  }),\r\n)\r\nlet lsMenuOpen = true\r\nif (typeof sessionStorage !== \"undefined\"\r\n  && typeof sessionStorage[\"menu-open\"] !== \"undefined\") {\r\n    lsMenuOpen = JSON.parse(sessionStorage[\"menu-open\"])\r\n}\r\n\r\nconst renderMenuLink = ({title, link, code}) => {\r\n  const location = useLocation()\r\n  const classes = useStyles()\r\n  return (\r\n    <Link to={link} key={link}>\r\n      <ListItem button className={link ===  location.pathname ? classes.menuCurrent : \"\"} >\r\n      <ListItemText primary={code ? <code>{title}</code> : title} />\r\n      </ListItem>\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst renderSection = ({name, children}, i) => (\r\n  <span key={name || i}>\r\n    <ListItem>\r\n      {name !== \"\" ? (\r\n        <Typography variant=\"h6\" noWrap>\r\n          {name}\r\n        </Typography>\r\n      ): \"\"}\r\n    </ListItem>\r\n    {children.map(renderMenuLink)}\r\n    <Divider />\r\n  </span>\r\n)\r\n\r\nconst pageToNextMap = ({} as any)\r\nconst pageToPrevMap = ({} as any)\r\nroutes\r\n  .reduce((acc, cur) => {\r\n    return acc.concat((cur as any).children.map(({link}) => link))\r\n  }, [])\r\n  .forEach((cur, i, arr) => {\r\n    if (arr.length - 1 !== i) {\r\n      pageToNextMap[cur] = arr[i + 1]\r\n    }\r\n    if (i !== 0) {\r\n      pageToPrevMap[cur] = arr[i - 1]\r\n    }\r\n  })\r\n  \r\n\r\nconst getCmpt = (url) => {\r\n  const classes:any = useStyles()\r\n  const { pathname } = useLocation()\r\n  return (\r\n    <>\r\n    {React.createElement(getMd(url))}\r\n    <div className={classes.navLinks}>\r\n    <div className={classes.navLeft}>\r\n      <Link to={pageToPrevMap[pathname]}>\r\n        <IconButton className={classes.largeFont}>\r\n          <ChevronLeftIcon fontSize=\"inherit\" className={classes.chevron} />\r\n        </IconButton>\r\n      </Link>\r\n    </div>\r\n    <div className={classes.navSeparator} />\r\n    <div className={classes.navRight}>\r\n      <Link to={pageToNextMap[pathname]}>\r\n        <IconButton className={classes.largeFont}>\r\n          <ChevronRightIcon fontSize=\"inherit\" className={classes.chevron} />\r\n        </IconButton>\r\n      </Link>\r\n    </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nconst renderSectionRoutes = ({children}) => children.map(renderRoute)\r\nconst renderRoute = ({cmpt, link}) => {\r\n  return <Route exact path={link}>\r\n    {getCmpt(cmpt)}\r\n  </Route>\r\n}\r\n\r\n\r\nconst App = () => {\r\n  if (process.env.NODE_ENV === \"production\") {\r\n    useTracking(\"UA-171255983-1\")\r\n  }\r\n\r\n  const [menuOpen, setMenuOpen] = useState(true)\r\n  const toggleMenuOpen = () => {\r\n    sessionStorage[\"menu-open\"] = !menuOpen\r\n    setMenuOpen(!menuOpen)\r\n  }\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n\r\n    const goNext = () => {\r\n      history.push(pageToNextMap[window.location.pathname])\r\n    }\r\n\r\n    const goPrev = () => {\r\n      history.push(pageToPrevMap[window.location.pathname])\r\n    }\r\n    const handleKeyPress = (e) => {\r\n      const active = (document as any).activeElement\r\n      if (\r\n          ![\"input\", \"textarea\"].includes(active.tagName.toLowerCase())\r\n          && !e.metaKey\r\n          && !e.shiftKey\r\n          && !e.ctrlKey) {\r\n        e.preventDefault()\r\n        if (e.key === \"ArrowRight\")\r\n            goNext()\r\n\r\n        if (e.key === \"ArrowLeft\")\r\n            goPrev()\r\n      }\r\n    }\r\n    window.addEventListener(\"keyup\", handleKeyPress)\r\n    return () => {\r\n      window.removeEventListener(\"keyup\", handleKeyPress)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // have to refresh, because react snapshot will\r\n    // have the menu always open by default\r\n    if (lsMenuOpen === false)\r\n      setMenuOpen(false)\r\n  }, [])\r\n  const scrollPositionName = `scrollposition.${window.location.href}`\r\n  \r\n  const classes = useStyles()\r\n  const listener = _ => {\r\n    const bodyOffset = document.body.getBoundingClientRect().y\r\n    if (typeof sessionStorage !== \"undefined\") {\r\n      sessionStorage[scrollPositionName] = -bodyOffset\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", listener)\r\n    const savedPosition = sessionStorage[scrollPositionName]\r\n    const maxLook = 100\r\n    let curInc = 0\r\n    if (savedPosition) {\r\n      const scroll = () => {\r\n        if (curInc++ > maxLook) return\r\n        if (getBodyHeight() < savedPosition) {\r\n          setTimeout(scroll, 100)\r\n        } else {\r\n          window.scrollTo(0, savedPosition)\r\n        }\r\n      }\r\n      scroll()\r\n      setTimeout(() => {\r\n      }, 300)\r\n    } else {\r\n      if (window.location.hash) {\r\n        const scroll = () => {\r\n          if (curInc++ > maxLook) return\r\n          if (document.querySelector(window.location.hash)) {\r\n            scrollToId(window.location.hash)\r\n          } else {\r\n            setTimeout(scroll, 100)\r\n          }\r\n        }\r\n        scroll()\r\n      }\r\n    }\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", listener)\r\n    }\r\n  }, [location.pathname])\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        color=\"secondary\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: menuOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleMenuOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, menuOpen && classes.hide, classes.chevronBackground)}\r\n          >\r\n            <MenuIcon className={classes.chevron} />\r\n          </IconButton>\r\n          <Link to=\"/\">\r\n            <Typography variant=\"h6\" noWrap>\r\n              <span className={classes.white}>@zecos (beta)</span>\r\n            </Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={menuOpen}\r\n        onClose={toggleMenuOpen}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={toggleMenuOpen} className={classes.chevronBackground}>\r\n            <ChevronLeftIcon className={classes.chevron} />\r\n          </IconButton>\r\n        </div>\r\n      <List>\r\n        {routes.map(renderSection)}\r\n          <a href=\"https://github.com/zecos/zecos\" target=\"_blank\"> \r\n            <ListItem>\r\n                <img\r\n                  src=\"/github-logo-light.png\"\r\n                  alt=\"github source code\"\r\n                  style={{\r\n                    width: 24,\r\n                    height: \"auto\",\r\n                    padding: 6,\r\n                    marginRight: 4,\r\n                  }}\r\n                />\r\n                Star/View Source\r\n            </ListItem>\r\n          </a>\r\n      </List>\r\n      </Drawer>\r\n      <div className={classes.drawerHeader} />\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: menuOpen,\r\n        })}\r\n      >\r\n        <Switch>\r\n          {routes.map(renderSectionRoutes)}\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    gtag?: (\r\n      key: string,\r\n      trackingId: string,\r\n      config: { page_path: string }\r\n    ) => void\r\n  }\r\n}\r\n\r\nexport const useTracking = (\r\n  trackingId: string | undefined = process.env.GA_MEASUREMENT_ID\r\n) => {\r\n  const { listen } = useHistory()\r\n\r\n  useEffect(() => {\r\n    const unlisten = listen((location) => {\r\n      if (!window.gtag) return\r\n      if (!trackingId) {\r\n        console.log(\r\n          'Tracking not enabled, as `trackingId` was not given and there is no `GA_MEASUREMENT_ID`.'\r\n        )\r\n        return\r\n      }\r\n\r\n      window.gtag('config', trackingId, { page_path: (location as any).pathname })\r\n    })\r\n\r\n    return unlisten\r\n  }, [trackingId, listen])\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  green,\r\n  blue,\r\n  pink,\r\n} from \"@material-ui/core/colors\"\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#ECEFF4',\r\n      light: '#2E3440',\r\n      dark: '#2E3440',\r\n      // contrastText: '',\r\n    },\r\n    secondary: {\r\n      main: '#2E3440',\r\n      light: '#E5E9F0',\r\n      dark: '#3B4252',\r\n      // contrastText: '',\r\n    },\r\n    error: {\r\n      main: '#BF616A',\r\n    },\r\n  },\r\n});","import React from 'react';\r\nimport {render} from 'react-snapshot';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n  BrowserRouter,\r\n} from \"react-router-dom\"\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport { theme } from './theme';\r\n\r\n\r\nrender((\r\n  <div>\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  </div>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as React from \"react\"\r\n\r\nexport const camelToTitle = camelCase => camelCase\r\n  .replace(/([A-Z])/g, match => ` ${match}`)\r\n  .replace(/([0-9]+)/g, match => ` ${match}`)\r\n  .replace(/^./g, match => match.toUpperCase())\r\n  .trim()\r\n\r\nexport const titleToKebab = title => title\r\n  .replace(/ ([A-Z])/g, match => `-${match.trim()}`)\r\n  .toLowerCase()\r\n  \r\nexport const kebabToSnake = (kebab: string) => kebab.replace(\"-\", \"_\")\r\n\r\nexport const camelToUpperCamel = (name: string) => name.charAt(0).toUpperCase() + name.slice(1)\r\n\r\nexport const hasItemErrors = (items) => {\r\n  const itemErrors = getErrors(items)\r\n  for (const name in itemErrors) {\r\n    if (itemErrors[name].length > 0) {\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport const getValues = function (items: any[], names: string | string[], ...more: string[]) {\r\n  if (Array.isArray(names) || more.length > 0) return byNames(items, more.concat(names))\r\n  else if (typeof names === \"string\") {\r\n    return byName(items, names)\r\n  } else if (arguments.length === 1) {\r\n    return getAllValues(items)\r\n  }\r\n}\r\n\r\n\r\nexport const getErrors = (items: any[]): any => {\r\n  const result = {}\r\n  for (const item of items) {\r\n    if (getItemType(item) === \"input\") {\r\n      result[item.name] = item.actions.getState().errors\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nconst byName = (items: any[], name: string): any => {\r\n  for (const item of items) {\r\n    if (getItemType(item) === \"input\" && name === item.name) {\r\n      return item.actions.getState().value\r\n    }\r\n  }\r\n}\r\n\r\nconst byNames = (items: any[], names: string[]): any => {\r\n  const result = {}\r\n  for (const item of items) {\r\n    for (const name of names)\r\n      if (getItemType(item) === \"input\" && name === item.name) {\r\n        result[name] = item.actions.getState().value\r\n      }\r\n  }\r\n  return result\r\n}\r\n\r\nconst getAllValues = (items: any[]) => {\r\n  const result = {}\r\n  for (const item of items) {\r\n      if (getItemType(item) === \"input\") {\r\n        result[item.name] = item.actions.getState().value\r\n      }\r\n  }\r\n  return result\r\n}\r\n\r\nconst getItemType = (item) => {\r\n  if (typeof item === \"object\" && typeof item.meta === \"object\") {\r\n    return item.meta.$$__input_type\r\n  } else {\r\n    return \"\"\r\n  }\r\n}\r\n\r\n\r\n\r\n// TODO: export this stuff\r\n\r\n// const getDisplayType = (item) => {\r\n//   if (typeof item === \"object\" && typeof item.meta === \"object\") {\r\n//     return item.meta.$$__input_type\r\n//   } else {\r\n//     return \"\"\r\n//   }\r\n// }\r\n\r\n\r\n// const displayLayout = ({items, name}, opts, level) => {\r\n//   return (\r\n//     <div style={{marginLeft: level * 10}}>\r\n//       <b style={{textAlign: \"left\", margin: \"5px auto\"}}>{name}</b><br />\r\n//       {items.map((item, i) => <div key={i}>{displayFormData(item, opts, level + 1)}</div>)}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// const renderDisplayErrors = (errs, level) => {\r\n//   return (\r\n//     <div>\r\n//       {errs.map((err, i) => (\r\n//         <div style={{marginLeft: level * 10}} key={i}>\r\n//           {err.toString()}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// const displayInput = ({state, name}, opts, level) => {\r\n//   if (opts.full) {\r\n//     return (\r\n//       <div style={{marginLeft: level * 10}}>\r\n//       <b style={{textAlign: \"left\", margin: \"5px auto\"}}>{name}</b><br />\r\n//         value: {state.value}<br />\r\n//         errors: {renderDisplayErrors(state.errors, level + 1)}\r\n//         pristine: {\"\" + state.pristine}<br />\r\n//         touched: {\"\" + state.touched}<br />\r\n//       </div>\r\n//     )\r\n//   }\r\n//   const stringVal = typeof state.value === \"string\" ? state.value :\r\n//     typeof state.value.toString === \"function\" ? state.value.toString() :\r\n//       JSON.stringify(state.value)\r\n//   return (\r\n//     <div style={{marginLeft: level * 10}}>\r\n//       {name}: {stringVal}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// const displayMulti = ({items, name}, opts, level) => {\r\n//   return (\r\n//     <div style={{marginLeft: level * 10}}>\r\n//       <b style={{textAlign: \"left\", margin: \"5px auto\"}}>{name}</b><br />\r\n//       {items.map((item, i) => <div key={i}>{displayFormData(item, opts, level + 1)}</div>)}\r\n//     </div>\r\n//   )\r\n    \r\n  \r\n// }\r\n// export const displayFormData:any = (item, opts = {className: \"\"}, level=0) => {\r\n//   const type = getDisplayType(item)\r\n//   let result;\r\n//   switch(type) {\r\n//     case \"layout\":\r\n//       result = displayLayout(item, opts, level)\r\n//       break\r\n//     case \"input\":\r\n//       result = displayInput(item, opts, level)\r\n//       break\r\n//     case \"multi\":\r\n//       result = displayMulti(item, opts, level)\r\n//       break\r\n//   }\r\n//   if (!result) {\r\n//     return <div>Input Not Recognized</div>\r\n//   }\r\n//   return <div className={opts.className}>{result}</div>\r\n// }\r\n\r\n// const logLayout = ({items, name}, opts, level) => {\r\n//   return (\r\n//       \"  \".repeat(level) + name + \"\\n\" +\r\n//       items\r\n//         .map((item, i) => getFormData(item, opts, level + 1))\r\n//         .join(\"\\n\")\r\n//         + \"\\n\"\r\n//   )\r\n// }\r\n\r\n// const logErrors = (errs, level) => {\r\n//   return (\r\n//       errs\r\n//         .map((err, i) => \"  \".repeat(level) + err.toString())\r\n//         .join(\"\\n\")\r\n//   )\r\n// }\r\n\r\n// const logInput = ({state, name}, opts, level) => {\r\n//   if (opts.full) {\r\n//     return (\r\n//         [\r\n//           name ,\r\n//           `value: ${state.value}`,\r\n//           `errors: \\n${logErrors(state.errors, level + 1)}`,\r\n//           `pristine: ${\"\" + state.pristine}`,\r\n//           `touched: ${\"\" + state.touched}`\r\n//         ].map(str => \"  \".repeat(level) + str + \"\\n\").join(\"\")\r\n//     )\r\n//   }\r\n//   return \"  \".repeat(level) + `${name}: ${state.value}`\r\n// }\r\n\r\n// const logMulti = ({items, name}, opts, level) => {\r\n//   console.log(\"multi items\", items)\r\n//   return \"  \".repeat(level) + name + \"\\n\" +\r\n//     items.map(item => getFormData(item, opts, level + 1)).join(\"\\n\") + \"\\n\"\r\n// }\r\n// export const getFormData:any = (item, opts = {}, level=0) => {\r\n//   const type = getDisplayType(item)\r\n//   let result;\r\n//   switch(type) {\r\n//     case \"layout\":\r\n//       result = logLayout(item, opts, level)\r\n//       break\r\n//     case \"input\":\r\n//       result = logInput(item, opts, level)\r\n//       break\r\n//     case \"multi\":\r\n//       result = logMulti(item, opts, level)\r\n//       break\r\n//   }\r\n//   return result\r\n// }\r\n\r\n// const logFormData = (items, opts) => {\r\n//   const result = getFormData(items, opts)\r\n//   if (!result) {\r\n//     console.log(\"Input not recognized\")\r\n//   }\r\n//   console.log(result)\r\n// }","import React from 'react'\r\nimport { validateName } from \"@zecos/validate\"\r\nimport { Text } from \"@zecos/input-basic\"\r\nimport { getValues } from '@zecos/util'\r\n\r\nconst SignInCmpt = () => {\r\n    const { FirstName, firstName } = Text({\r\n        validate: validateName,\r\n        init: 'Harry',\r\n        name: \"firstName\"\r\n    })\r\n\r\n    const { MiddleName,  middleName } = Text({\r\n        validate: validateName,\r\n        init: 'James',\r\n        name: \"middleName\"\r\n    })\r\n\r\n    const { LastName,  lastName } = Text({\r\n        validate: validateName,\r\n        init: 'Potter',\r\n        name: \"lastName\"\r\n    })\r\n\r\n    const items = [firstName, middleName, lastName]\r\n\r\n    const singleValue = getValues(items, \"firstName\")\r\n    const multipleValues = getValues(items, \"firstName\", \"lastName\")\r\n    const alsoMultipleValues = getValues(items, [\"firstName\", \"lastName\"])\r\n    const allValues = getValues(items)\r\n\r\n    // output prettier\r\n    const neatify = obj => <pre>{JSON.stringify(obj, null, 2)}</pre>\r\n\r\n    return (\r\n        <div>\r\n            <FirstName />\r\n            <MiddleName />\r\n            <LastName />\r\n            <br />\r\n            Single Value: {neatify(singleValue)}\r\n            <br />\r\n            Multiple Values: {neatify(multipleValues)}\r\n            <br />\r\n            Also Multiple Values: {neatify(alsoMultipleValues)}\r\n            <br />\r\n            All Values: {neatify(allValues)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInCmpt\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from \"react\";\r\nimport styles from \"./Text.css\";\r\nimport groupStyles from \"./group.css\";\r\nimport { createInput } from \"@zecos/input\";\r\n\r\n\r\nconst renderError = error => <div key={error.toString()} className={styles.error}>{error.toString()}</div>\r\nconst renderErrors = errors => {\r\n  if (!errors.length) {\r\n    return \"\"\r\n  }\r\n  return (\r\n    <div className={styles.errors}>\r\n      {errors.map(renderError)}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst passwordRegExp = /password/i\r\nexport const Text = createInput(({helpers, state, props}) => {\r\n    const {\r\n      id,\r\n      name,\r\n      label,\r\n      handleChange,\r\n      handleBlur,\r\n    } = helpers\r\n\r\n    // use password type automatically if the name contains the word \"password\" just as a convenience\r\n    const type = props.type || passwordRegExp.test(name) ? \"password\" : \"text\"\r\n    \r\n    const {touched, errors, value} = state\r\n    return (\r\n      <div className={groupStyles.groupContainer}>\r\n        <div className={groupStyles.formGroup}>\r\n          <label className={styles.textLabel} htmlFor={name}>\r\n            {label}\r\n          {touched && renderErrors(errors)}\r\n          </label>\r\n          <input\r\n            className={styles.textInput}\r\n            name={name}\r\n            aria-label={label}\r\n            value={value}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            id={id}\r\n            type={type}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n})","import * as React from \"react\";\r\nimport styles from \"./TextArea.css\";\r\nimport groupStyles from \"./group.css\"\r\nimport { createInput } from \"@zecos/input\";\r\n\r\nconst renderError = error => <div className={styles.error}>{error.toString()}</div>\r\nconst renderErrors = errors => {\r\n  if (!errors.length) {\r\n    return \"\"\r\n  }\r\n  return (\r\n    <div className={styles.errors}>\r\n      {errors.map(renderError)}\r\n    </div>\r\n  )\r\n}\r\nexport interface IOptions {\r\n  rows?: number\r\n}\r\n\r\nexport const TextArea = createInput(({helpers, state, props}) => {\r\n  const {\r\n    id,\r\n    name,\r\n    label,\r\n    handleChange,\r\n    handleBlur,\r\n  } = helpers\r\n\r\n  const { touched, errors, value } = state\r\n  return (\r\n    <div className={groupStyles.groupContainer}>\r\n      <div className={groupStyles.formGroup}>\r\n        <label className={styles.textAreaLabel} htmlFor={name}>\r\n          {label}\r\n        </label>\r\n        {touched && renderErrors(errors)}\r\n        {/* explicit better than implicit */}\r\n        <textarea\r\n          rows={props.rows || 3}\r\n          className={styles.textArea}\r\n          name={name}\r\n          aria-label={label}\r\n          value={value}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          id={id}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n})","import * as React from \"react\"\r\nimport styles from \"./Select.css\"\r\nimport groupStyles from \"./group.css\"\r\n// import { ReactFieldSingleActions } from \"@zecos/input\"\r\nimport { IFieldSingleState } from '@zecos/field'\r\nimport { createInput } from \"@zecos/input\";\r\n\r\n\r\nconst renderOption = ([label, value]) => {\r\n  return (\r\n    <option key={value} value={value}>\r\n      {label}\r\n    </option>\r\n  )\r\n}\r\n\r\ninterface ReactFieldSingleActions {\r\n  setValue: (newVal) => any\r\n  reset: () => any\r\n  setTouched: () => any\r\n  refreshErrors: () => any\r\n  getState: () => any\r\n}\r\n\r\nexport const Select = createInput(({helpers, props, state}) => {\r\n  const {\r\n    id,\r\n    name,\r\n    handleChange,\r\n    handleBlur,\r\n    label,\r\n  } = helpers\r\n\r\n  const { value } = state\r\n  return (\r\n    <div className={groupStyles.groupContainer}>\r\n      <div className={groupStyles.formGroup}>\r\n        <label className={styles.label} htmlFor={name}>\r\n          {label}\r\n        </label>\r\n        <select\r\n          className={styles.selectGroup}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          name={name}\r\n          id={id}\r\n          value={value}\r\n          aria-label={label}\r\n        >\r\n          {Object.entries(props.options).map(renderOption)}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport interface IOptions {\r\n  actions: ReactFieldSingleActions\r\n  state: IFieldSingleState\r\n  name: string\r\n}\r\n","import * as React from 'react'\r\nimport { createInput } from \"@zecos/input\"\r\nimport styles from \"./Slider.css\";\r\nimport groupStyles from \"./group.css\";\r\n\r\nexport const Slider = createInput(({helpers, state, props}) => {\r\n  const min = props.min || 0\r\n  const max = props.max || 100\r\n  const step = props.step || 1\r\n  const { value } = state\r\n  const {\r\n    handleChange,\r\n    handleBlur,\r\n    id,\r\n    label,\r\n  } = helpers\r\n  return (\r\n    <div className={groupStyles.formGroup}>\r\n      <label className={styles.textLabel} htmlFor={name}>{label}</label>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        value={value}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        className={`${styles.sliderInput} ${props.className}`}\r\n        id={id}\r\n      />\r\n  </div>\r\n  )\r\n})","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as React from 'react'\r\nimport { createInput } from '@zecos/input'\r\nimport styles from './Checkbox.css'\r\n\r\nexport const Checkbox = createInput(({helpers, state, actions, props}) => {\r\n  const {\r\n    id,\r\n    name,\r\n    label,\r\n  } = helpers\r\n\r\n  const { value } = state\r\n  const boolVal = Boolean(value)\r\n  const {className, ...moreProps} = props\r\n  return (\r\n    <div>\r\n      <label className={styles.checkboxContainer} id={id}>\r\n      {label}\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        checked={boolVal}\r\n        onChange={() => actions.setValue(!boolVal)}\r\n        {...moreProps}\r\n      />\r\n      <span className={styles.checkmark}></span>\r\n      </label>\r\n    </div>\r\n  )\r\n})","import * as React from 'react'\r\nimport { createInput } from '@zecos/input'\r\nimport groupStyles from './group.css'\r\nimport styles from './Radio.css'\r\n\r\nexport const Radio = createInput(({helpers, props, state}) => {\r\n  const {\r\n    label,\r\n    name,\r\n    handleChange,\r\n  } = helpers\r\n  const { value } = state\r\n  \r\n  const { options } = props\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor={name} className={styles.mainLabel}>\r\n        {label}\r\n      </label>\r\n      {Object.entries(options).map(([label, val]) => {\r\n        const _val:string = String(val)\r\n        return (\r\n          <div key={_val}>\r\n          <label className={styles.radioContainer}>{label}\r\n          <input\r\n            type=\"radio\"\r\n            name={name}\r\n            checked={_val === value}\r\n            value={_val}\r\n            onChange={handleChange}\r\n          />\r\n          <span className={styles.radio} />\r\n          </label>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n})","import * as React from 'react'\r\nimport { createLayout } from '@zecos/input'\r\nimport styles from './GroupLayout.css'\r\n\r\nconst renderError = (error, i) => (\r\n  <div key={i}>\r\n    {error.toString()}\r\n  </div>\r\n)\r\n\r\nexport const GroupLayout = createLayout(({props, items, errors, helpers}) => {\r\n  const Items = items\r\n    .map(input => {\r\n      const {Cmpt, helpers} = input\r\n      return <Cmpt key={helpers.name} />\r\n    })\r\n  \r\n  return (\r\n    <div>\r\n      {errors.map(renderError)}\r\n      <label className={styles.withMargin}>{helpers.label}</label>\r\n      {Items}\r\n    </div>\r\n  )\r\n})\r\n\r\n","import * as React from \"react\"\r\nimport styles from \"./Button.css\"\r\nimport groupStyles from \"./group.css\"\r\n// import { ReactFieldSingleActions } from \"@zecos/input\"\r\nimport { IFieldSingleState } from '@zecos/field'\r\n\r\ninterface ReactFieldSingleActions {\r\n  setValue: (newVal) => any\r\n  reset: () => any\r\n  setTouched: () => any\r\n  refreshErrors: () => any\r\n  getState: () => any\r\n}\r\n\r\nexport const Button = props => {\r\n    const {label, onClick, ...otherProps} = props\r\n    const _onClick = (e, ...args) => {\r\n      e.preventDefault()\r\n      if (typeof props.onClick !== \"undefined\") {\r\n        props.onClick(e, ...args)\r\n      }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={groupStyles.groupContainer}>\r\n        <div className={groupStyles.formGroup}>\r\n            <button\r\n                className={styles.button}\r\n                onClick={_onClick}\r\n                name={name}\r\n                aria-label={props.label || \"\"}\r\n                {...otherProps}\r\n            >\r\n                {props.children || props.label}\r\n            </button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport interface IOptions {\r\n  actions: ReactFieldSingleActions\r\n  state: IFieldSingleState\r\n  name: string\r\n}\r\n\r\n","var camelToTitle = function (camelCase) { return camelCase\r\n    .replace(/([A-Z])/g, function (match) { return \" \" + match; })\r\n    .replace(/([0-9]+)/g, function (match) { return \" \" + match; })\r\n    .replace(/^./g, function (match) { return match.toUpperCase(); })\r\n    .trim(); };\r\nvar titleToKebab = function (title) { return title\r\n    .replace(/ ([A-Z])/g, function (match) { return \"-\" + match.trim(); })\r\n    .toLowerCase(); };\r\nvar kebabToSnake = function (kebab) { return kebab.replace(\"-\", \"_\"); };\r\nvar camelToUpperCamel = function (name) { return name.charAt(0).toUpperCase() + name.slice(1); };\r\nvar hasItemErrors = function (items) {\r\n    var itemErrors = getErrors(items);\r\n    for (var name_1 in itemErrors) {\r\n        if (itemErrors[name_1].length > 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nvar getValues = function (items, names) {\r\n    var more = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        more[_i - 2] = arguments[_i];\r\n    }\r\n    if (Array.isArray(names) || more.length > 0)\r\n        return byNames(items, more.concat(names));\r\n    else if (typeof names === \"string\") {\r\n        return byName(items, names);\r\n    }\r\n    else if (arguments.length === 1) {\r\n        return getAllValues(items);\r\n    }\r\n};\r\nvar getErrors = function (items) {\r\n    var result = {};\r\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n        var item = items_1[_i];\r\n        if (getItemType(item) === \"input\") {\r\n            result[item.name] = item.actions.getState().errors;\r\n        }\r\n    }\r\n    return result;\r\n};\r\nvar byName = function (items, name) {\r\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\r\n        var item = items_2[_i];\r\n        if (getItemType(item) === \"input\" && name === item.name) {\r\n            return item.actions.getState().value;\r\n        }\r\n    }\r\n};\r\nvar byNames = function (items, names) {\r\n    var result = {};\r\n    for (var _i = 0, items_3 = items; _i < items_3.length; _i++) {\r\n        var item = items_3[_i];\r\n        for (var _a = 0, names_1 = names; _a < names_1.length; _a++) {\r\n            var name_2 = names_1[_a];\r\n            if (getItemType(item) === \"input\" && name_2 === item.name) {\r\n                result[name_2] = item.actions.getState().value;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n};\r\nvar getAllValues = function (items) {\r\n    var result = {};\r\n    for (var _i = 0, items_4 = items; _i < items_4.length; _i++) {\r\n        var item = items_4[_i];\r\n        if (getItemType(item) === \"input\") {\r\n            result[item.name] = item.actions.getState().value;\r\n        }\r\n    }\r\n    return result;\r\n};\r\nvar getItemType = function (item) {\r\n    if (typeof item === \"object\" && typeof item.meta === \"object\") {\r\n        return item.meta.$$__input_type;\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n};\r\n// TODO: export this stuff\r\n// const getDisplayType = (item) => {\r\n//   if (typeof item === \"object\" && typeof item.meta === \"object\") {\r\n//     return item.meta.$$__input_type\r\n//   } else {\r\n//     return \"\"\r\n//   }\r\n// }\r\n// const displayLayout = ({items, name}, opts, level) => {\r\n//   return (\r\n//     <div style={{marginLeft: level * 10}}>\r\n//       <b style={{textAlign: \"left\", margin: \"5px auto\"}}>{name}</b><br />\r\n//       {items.map((item, i) => <div key={i}>{displayFormData(item, opts, level + 1)}</div>)}\r\n//     </div>\r\n//   )\r\n// }\r\n// const renderDisplayErrors = (errs, level) => {\r\n//   return (\r\n//     <div>\r\n//       {errs.map((err, i) => (\r\n//         <div style={{marginLeft: level * 10}} key={i}>\r\n//           {err.toString()}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   )\r\n// }\r\n// const displayInput = ({state, name}, opts, level) => {\r\n//   if (opts.full) {\r\n//     return (\r\n//       <div style={{marginLeft: level * 10}}>\r\n//       <b style={{textAlign: \"left\", margin: \"5px auto\"}}>{name}</b><br />\r\n//         value: {state.value}<br />\r\n//         errors: {renderDisplayErrors(state.errors, level + 1)}\r\n//         pristine: {\"\" + state.pristine}<br />\r\n//         touched: {\"\" + state.touched}<br />\r\n//       </div>\r\n//     )\r\n//   }\r\n//   const stringVal = typeof state.value === \"string\" ? state.value :\r\n//     typeof state.value.toString === \"function\" ? state.value.toString() :\r\n//       JSON.stringify(state.value)\r\n//   return (\r\n//     <div style={{marginLeft: level * 10}}>\r\n//       {name}: {stringVal}\r\n//     </div>\r\n//   )\r\n// }\r\n// const displayMulti = ({items, name}, opts, level) => {\r\n//   return (\r\n//     <div style={{marginLeft: level * 10}}>\r\n//       <b style={{textAlign: \"left\", margin: \"5px auto\"}}>{name}</b><br />\r\n//       {items.map((item, i) => <div key={i}>{displayFormData(item, opts, level + 1)}</div>)}\r\n//     </div>\r\n//   )\r\n// }\r\n// export const displayFormData:any = (item, opts = {className: \"\"}, level=0) => {\r\n//   const type = getDisplayType(item)\r\n//   let result;\r\n//   switch(type) {\r\n//     case \"layout\":\r\n//       result = displayLayout(item, opts, level)\r\n//       break\r\n//     case \"input\":\r\n//       result = displayInput(item, opts, level)\r\n//       break\r\n//     case \"multi\":\r\n//       result = displayMulti(item, opts, level)\r\n//       break\r\n//   }\r\n//   if (!result) {\r\n//     return <div>Input Not Recognized</div>\r\n//   }\r\n//   return <div className={opts.className}>{result}</div>\r\n// }\r\n// const logLayout = ({items, name}, opts, level) => {\r\n//   return (\r\n//       \"  \".repeat(level) + name + \"\\n\" +\r\n//       items\r\n//         .map((item, i) => getFormData(item, opts, level + 1))\r\n//         .join(\"\\n\")\r\n//         + \"\\n\"\r\n//   )\r\n// }\r\n// const logErrors = (errs, level) => {\r\n//   return (\r\n//       errs\r\n//         .map((err, i) => \"  \".repeat(level) + err.toString())\r\n//         .join(\"\\n\")\r\n//   )\r\n// }\r\n// const logInput = ({state, name}, opts, level) => {\r\n//   if (opts.full) {\r\n//     return (\r\n//         [\r\n//           name ,\r\n//           `value: ${state.value}`,\r\n//           `errors: \\n${logErrors(state.errors, level + 1)}`,\r\n//           `pristine: ${\"\" + state.pristine}`,\r\n//           `touched: ${\"\" + state.touched}`\r\n//         ].map(str => \"  \".repeat(level) + str + \"\\n\").join(\"\")\r\n//     )\r\n//   }\r\n//   return \"  \".repeat(level) + `${name}: ${state.value}`\r\n// }\r\n// const logMulti = ({items, name}, opts, level) => {\r\n//   console.log(\"multi items\", items)\r\n//   return \"  \".repeat(level) + name + \"\\n\" +\r\n//     items.map(item => getFormData(item, opts, level + 1)).join(\"\\n\") + \"\\n\"\r\n// }\r\n// export const getFormData:any = (item, opts = {}, level=0) => {\r\n//   const type = getDisplayType(item)\r\n//   let result;\r\n//   switch(type) {\r\n//     case \"layout\":\r\n//       result = logLayout(item, opts, level)\r\n//       break\r\n//     case \"input\":\r\n//       result = logInput(item, opts, level)\r\n//       break\r\n//     case \"multi\":\r\n//       result = logMulti(item, opts, level)\r\n//       break\r\n//   }\r\n//   return result\r\n// }\r\n// const logFormData = (items, opts) => {\r\n//   const result = getFormData(items, opts)\r\n//   if (!result) {\r\n//     console.log(\"Input not recognized\")\r\n//   }\r\n//   console.log(result)\r\n// }\n\nexport { camelToTitle, titleToKebab, kebabToSnake, camelToUpperCamel, hasItemErrors, getValues, getErrors };\n//# sourceMappingURL=index.es.js.map\n","import * as React from 'react'\r\nimport styles from './SimpleForm.css'\r\nimport { Button } from './Button'\r\nimport { camelToTitle, camelToUpperCamel, hasItemErrors, getValues } from '@zecos/util'\r\n\r\nconst renderError = (error, i) => <div className={styles.red} key={i}>{error}</div>\r\n\r\nconst renderErrors = (err) => {\r\n  if (Array.isArray(err)) {\r\n    return <>{err.map(renderError)}</>\r\n  } else {\r\n    return renderError(err, null)\r\n  }\r\n}\r\n\r\n// TODO: move to util and merge with validation error processing\r\n// also should give example for custom error validation\r\nconst processError = (err) => {\r\n  if (typeof err === \"string\") {\r\n    try {\r\n      err = JSON.parse(err)\r\n    } catch {}\r\n  }\r\n  if (Array.isArray(err)) {\r\n    return err\r\n  } else if (typeof err === \"string\") {\r\n    return [err]\r\n  } else if (typeof err  === \"object\" && typeof err.message === \"string\") {\r\n    return [err.message]\r\n  } else {\r\n    console.error(\"couldn't parse error\", err)\r\n  }\r\n  return undefined\r\n}\r\n\r\ninterface IGenericObject {\r\n  [key: string]: string\r\n}\r\n\r\ninterface IActionCallbackArgs {\r\n  items: any,\r\n  values: (name?: string, ...names: string[]) => IGenericObject\r\n}\r\n\r\ninterface IOptions {\r\n  [key: string]: any,\r\n  action?: (IActionCallbackArgs) => any\r\n}\r\n\r\nexport const SimpleForm = (opts: IOptions) => {\r\n  const name = opts.name\r\n  const title = camelToTitle(name)\r\n  const upperCamel:string  = camelToUpperCamel(name)\r\n  \r\n  const [attemptedWithErrors, setAttemptedWithErrors] = React.useState(false)\r\n  const [serverErrors, setServerErrors] = React.useState([] as any[])\r\n  const handleErrors = resp => {\r\n    if (resp.status > 399) {\r\n      resp.text().then((err) => {\r\n        err = processError(err)\r\n        if (err) {\r\n          setServerErrors(err)\r\n        }\r\n      })\r\n      return Promise.reject(title + \" error\")\r\n    } else {\r\n      return resp\r\n    }\r\n  }\r\n  const handleSubmit = opts.action ? (e) => {\r\n    e.preventDefault()\r\n    if (hasItemErrors(opts.items).length) {\r\n      setAttemptedWithErrors(true)\r\n      return\r\n    }\r\n    setAttemptedWithErrors(false)\r\n    const values = (...args) => getValues(opts.items, ...args)\r\n    const actionCallbackArgs: IActionCallbackArgs = {\r\n      items: opts.items,\r\n      values,\r\n    }\r\n    const result = (opts.action as any)(actionCallbackArgs)\r\n    if (isPromise(result)) {\r\n      setIsLoading(true)\r\n      if (opts.catchServerErrors !== false) {\r\n        result\r\n      }\r\n      result\r\n        .finally((e) =>{\r\n          setIsLoading(false)\r\n        })\r\n    }\r\n  } : undefined\r\n  const [isLoading, setIsLoading] = React.useState(false)\r\n\r\n  const Cmpt = (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3 className={styles.heading}>{title}</h3>\r\n      {(opts.errors && opts.errors.length) ? renderErrors(opts.errors) : \"\"}\r\n      {serverErrors.length ? renderErrors(serverErrors) : \"\"}\r\n      {attemptedWithErrors ? <div className={styles.red}>Please fix errors to continue.</div> : \"\"}\r\n      {opts.items.map((Input, i) => (\r\n        // if it is a @zecos/input component, add the component, otherwise\r\n        // leave as is\r\n        typeof Input.Cmpt !== \"undefined\" ?\r\n          <span key={i}><Input.Cmpt key={i} /></span> :\r\n          <span key={i}>{Input}</span>\r\n      ))}\r\n      <Button\r\n        disabled={isLoading}\r\n        onClick={handleSubmit}\r\n      >\r\n      {isLoading ? opts.loadingText || \"Loading...\" : opts.submitButtonText || title}\r\n      </Button>\r\n    </form>\r\n  )\r\n  return {\r\n    Cmpt,\r\n    [upperCamel]: Cmpt,\r\n    handleErrors,\r\n    [`${name}HandleErrors`]: handleErrors,\r\n  }\r\n  \r\n}\r\n\r\nfunction isPromise(value) {\r\n  return value && value.then && typeof value.then === 'function';\r\n}\r\n\r\n","import * as React from 'react'\r\nimport { createMulti } from '@zecos/input'\r\nimport styles from './Multi.css'\r\n\r\nexport const Multi:any = createMulti(({items, helpers}) => {\r\n  return <div>\r\n    <h3 className={styles.heading}>{helpers.title}</h3>\r\n    {items.map((Input, i) => <Input.Cmpt key={i} />)}\r\n  </div>\r\n})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"CodeBlock_result__2yzf9\",\"resultHeading\":\"CodeBlock_resultHeading__3oRwh\"};"],"sourceRoot":""}